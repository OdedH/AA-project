Doing OT in a Straitjacket
Jason Eisner (Penn / Rochester) — UCLA, 14 June 1999
jeisner@linc.cis.upenn.edu
1. A question that could drive you crazy
What constraints does OT allow? i.e., What is the substance of the theory?
(1) Some clearly bad constraints (but what makes them bad?):
a. Palindromic: The candidate reads the same backwards as forwards.
b. FtQuint: Feet are quintary (5 syllables or moras).
c. MemberOf(a, aardvark, aardvarks, aardwolf, aardwolves, Aaron . . . ):
Candidate must be in the speciﬁed set of surface forms.
d. MatchesOutputOfSPE: The output matches the result of applying
Chomsky & Halle (1968) to the input.
(2) Some clearly okay constraints (but what makes them okay?):
a. Clash-ATR: Low vowels may not bear the atr feature.
b. Onset: Every syllable must start with a consonant.
(3) Some questionable constraints, by the standards of derivational phonology:
a. FtBin: Feet are binary (2 syllables or moras).
b. Align-L(Foot, PrWd): The sum of all distances from left edges of feet to
the left edge of the PrWd is minimized. (For consequences see (34).)
c. Half the constraints that ﬁrst-year phonology students make up.
Reasons to try to formalize OT, rather than allowing ad hoc English constraints:
(4) a. Results in an explicit, falsiﬁable theory of UG
b. Simpliﬁes that theory, exposing formal similarities among constraints
c. Enables computational work (e.g., Eisner 1997b)
(tools for linguists; algorithms for generation, parsing, acquisition; theorems on
expressive power)

d. Constrains linguistic description
e. Aids descriptive work by providing well-motivated and well-formalized
constraints and representations
(many constraints given informally in the literature, including GA, do not
specify how to count violations in all circumstances)

The formalization sketched in this talk is called OTP—OT with primitive
constraints.
(5) Identifying such core constraints is at the center of the OT program:
“The danger, therefore, lies in . . . clinging to a conception of Universal Grammar
as little more than a loose organizing framework for grammars. A much stronger
stance, in close accord with the thrust of recent work, is available . . . Universal
Grammar can supply the very substance from which grammars are built: a set

1

of highly general constraints, which, through ranking, interact to produce the
elaborate particularity of individual languages.”
(Prince & Smolensky 1993,
p. 198)

(see also Smolensky 1995, Green 1994)
2. Traveling the Web in search of truth
Suppose we had a set Con of core constraints for phonology—simple mechanisms
that could be used to build up all the basic phonological phenomena. What would it
look like?
Ask: What formal devices are regularly used by constraints in the literature?
(6) a. NasVoi

(Itˆ, Mester, & Padgett 1996)
o

“Every nasal segment must be linked to some voicing feature.”

b. Onset
Align(σ, L, C, L)

(equivalent)

(Prince & Smolensky 1993)
(McCarthy & Prince 1993)

“Every syllable must begin with (be left-aligned with) some consonant.”

c. Common thread: “Every . . . some.”
∀α, ∃β such that α and β stand in such-and-such local relationship.
If we allow α and β to be edges (as one option), we only need one kind of local
relationship—temporal coocurrence:
(7) The primitive implication family.
α → β means: ∀α, ∃β such that α and β coincide temporally.
(8) Rewrite (6):
a. nas → voi: ∀nas, ∃voi such that nas and voi coincide temporally.
b. σ [ → C [ : ∀ σ [ , ∃ C [ such that σ [ and C [ coincide temporally.
Thus we can regard alignment as “edge licensing.” (Or licensing is “feature
alignment.”) We can also mix references to edges and interiors:
(9) F → ]µ : Every foot must cross a mora boundary. (No degenerate feet.)
(= Min-2m: Green & Kenstowicz 1995)
Like GA, primitive implication is formal rather than substantive:
Onset: σ [ → C [ , NoOnset: σ [ → V [ , Coda: ]σ → ]C , and NoCoda:
]σ → ]V are all equally easy to express using this family. So as in other theories,
UG must still state that Onset and NoCoda are strongly preferred by human
grammars (just as it must state any universal rankings). (The dispreferred constraints may still be useful: e.g., Hammond 1995 proposes a NoOnset constraint
for stressless syllables. See Green 1994 on metaconstraints.)
McCarthy & Prince (1993) have previously noted that alignment plays a unifying
role, and have suggested that it’s the core mechanism for all of phonology:
(10) a. “These examples only hint at the generality of the phenomenon to be explored
2

here, which extends to include all the various ways that constituents may be
enjoined to share an edge in prosody and morphology. Data like these have been
given widely disparate treatments in the literature . . . ” (p. 1)
b. “Taken together with X-like restrictions on immediate domination and interpreted within the appropriate theory of constraint satisfaction, GA provides a
mechanism for completely spec¡ifying a class of formal languages that, when substantive parameters are set, ought to be all-but-coextensive with possible human
languages.” (p. 2)

A second constraint family:
Above, we uniﬁed feature licensing and alignment.
The opposite of feature licensing is feature clash.
The opposite of alignment is disalignment, i.e., edge clash.
(11) a. *[low, atr]

(Cole & Kisseberth 1994)

“Low features are incompatible with atr features.”

b. Nonfinality = *Align(PrWd , R, F , R)

(e.g., Buckley 1995)

“Prosodic words may not be right-aligned with feet.”

(12) The primitive clash family.
α ⊥ β means: ∀α, ∃β such that α and β coincide temporally.

[cf. (7)]

Equivalently: ∀α ∀β, α and β are temporally disjoint.
(13) Rewrite (11):
a. low ⊥ atr: All low and atr features are temporally disjoint.
b. ]PrWd ⊥ ]F : Each ]PrWd does not coincide with (fall on) any ]F .
Again, this formulation suggests we can mix edges and interiors, and we can:
(14) F ⊥

M[ :

A foot may not cross a morpheme boundary.
(= Tauto-F, Crowhurst 1994)

(In fact, (14) is more plausible than Crowhurst’s formulation, * F [ σ M [ σ ]F .
It would be surprising to ﬁnd a language that crucially blocked M [ only where
Crowhurst states, while still allowing it to interrupt a syllable or a ternary foot.)

Null hypothesis: These two families of local primitive constraints —implication and
clash—are the only ones needed.
α → β says that α’s attract β’s.
α ⊥ β says that α’s repel β’s.
3. What representations are being constrained?
The primitive constraints constantly refer to edges, and never refer to association
lines. So they are easiest to interpret if we assume that Òk is represented as in (15b),
3

not (15a). This representation is inspired by Optimal Domains Theory (Cole &
Kisseberth 1994) and Correspondence Theory (McCarthy & Prince 1995).
(15) a.

voi
nas/
|/
C
C
\ /
vel

b.

voi [

]voi
]nas
]
C [C

nas [
C[

]C
]vel
−→−→timeline−→−→

vel [

(The timeline is really just an ordered set of edge
brackets. Thus, only horizontal order matters in the
drawing above. Ignore spacing and vertical order.)
c. Easy to see that (15b) violates the progressive voicing constraint ]voi ⊥ C [ .
(Goldsmith
1990)

(16) Key characteristics of the new representation:
a. Constituents ﬂoat along a timeline.
Example constituents: nas (autosegmental), µ (prosodic), x (stress
mark), Stem (morphological), H-domain (feature domain)
b. The timeline is continuous, not divided into segments.
c. All constituents have width and edges. Thus we can refer naturally to the
edges of syllables (or morphemes) whose segmental features are scattered
across multiple tiers and perhaps shared with other syllables (cf. Itˆ &
o
Mester 1994).
d. For autosegments with width, such as [nas], think of phonetic gestures.
(15b), which begins with simultaneous nas [ (= lower the velum) and voi [
(= begin vibration of the vocal folds). The primitive constraints can only
aﬀect the order of bracket edges; it is up to the phonetic component to
determine actual durations.
e. Association or Correspondence of two constituents is indicated by having
them overlap. (Independently proposed by Bird & Klein 1990.) E.g., the
velar gesture in candidate (15b) spans both consonants.
f. No need for faithfulness constraints on the insertion, deletion, or relocation
of association lines (cf. Kirchner 1993, Myers 1994, F´ry 1994).
e
g. No need for (inviolable) well-formedness constraints against gapping or
crossing of associations (cf. Kirchner 1993, F´ry 1994, Oostendorp 1995).
e
h. No need for Correspondence indices.
(17) Where do these representations come from? The behavior of Gen:
a. Hypothesis: Gen can’t do anything fancy, like palindromes—nothing that
the primitive constraints couldn’t also handle. So for convenience, let’s
make Gen as simple as possible, and let undominated constraints clean up
the huge unbridled candidate set that results.
b. Gen places constituents freely along the continuous timeline.
That is, as far as Gen is concerned, brackets may land anywhere.
Conditions such as the prosodic hierarchy are enforced by undominated
primitive constraints, not by Gen.
c. However, Gen requires that edge brackets come in matched pairs.

4

d. Gen also does not allow distinct constituents of the same type (e.g., two
syllables or two lab autosegments) to overlap. (Elements on the same tier
never link to each other.)
e. Gen is free only with regard to output material. It is forced to place a copy
of the input material into every candidate, on its own tier, for purposes of
I-O Correspondence. (Cf. Containment (Prince & Smolensky 1993), Strict
Consistency Constraint (Polgardi 1995).)
(18) Because the timeline is continuous
can fall in mid-segment:
a. Contour tones:
]H
H[
]L
L[
]V
V[

rather than divided into segments, brackets

H
..
L.
.. \
\ / ..
..
vowel

b. Geminates (long vowels are similar):
[
]σ
]σ
σ[
]C
]C
C[
C[
]V
]V
V[
V[

σ
σ
/|\ /|
C V C V

4. Donning the straitjacket

(19) Formal statement of the primitive constraint families:
a. α → β: Each α temporally overlaps some β.
Scoring: Each α without a β incurs one violation mark.
b. α ⊥ β: Each α temporally overlaps no β.
Scoring: Each overlap incurs one violation mark.
(20) What can α and β be?
a. Edges such as low [ or ]low .
b. Interiors such as low.
Denote only the interior of a constituent, without its edges.
Thus, low and atr do not overlap here:
]AT R
AT R [
]low
low [
I.e., the above candidate satisﬁes low ⊥ atr but violates low → atr.
c. Conjunctions and disjunctions as in (21).
(Dispreferred in analyses, on grounds of their greater complexity—they
refer to more features.)
(21) Occasionally, must allow the following generalized forms of (19). I propose to
limit conjunction/disjunction to these conﬁgurations only.
a. ( α1 and α2 and . . . ) → ( β1 or β2 or . . . )
Scoring: Violated once by each set of objects {A1 , A2 , . . .} of types
α1 , α2 , . . . respectively that all overlap on the timeline and whose
intersection does not overlap any object of type β1 , β2 , . . ..
b. ( α1 and α2 and . . . ) ⊥ ( β1 and β2 and . . . )

5

Scoring: Violated once by each set of objects {A1 , A2 , . . . , B1 , B2 , . . .}
of types α1 , α2 , . . . , β1 , β2 , . . . respectively that all overlap on the
timeline.
(Could also be notated: α1 ⊥ α2 ⊥ · · · ⊥ β1 ⊥ β2 ⊥ · · ·.)

Each violation mark is still triggered individually by a bad local condition in
the candidate, e.g., a moment on the timeline when certain edges are present
and others are not.
Note that some constraints require crisp alignment of edges ( x [ → y [ ), while others
are weaker and require only overlap (x → y), allowing spreading. (Cf. the violable
CrispEdge constraint of Itˆ & Mester (1994).)
o
5. Input and output
I-O Correspondence (between input and output features): Signaled by alignment
between input and output tiers.
Correspondence relations with and without spreading:
(22)

a.

voi [
voi [

voi [

]voi

c.

voi [

]voi

d.

voi [

Perfect faithfulness

]voi
]voi

b.

Violates Max-IO (Parse): voi → voi

voi [

Violates Dep-IO (Fill): voi → voi

]voi
]voi

Like (a), this spread version satisﬁes Parse & Fill,
which only require overlap. Spreading may be required
to satisfy some other constraint. On the other hand,
various constraints can be invoked against spreading:
either voi ⊥ ]voi or ]voi → ]voi or ]voi → ]voi could
be used to block (d). (Cf. Yip, 1994:21,fn. 11, on
MSeg vs. *Insert Structure)

Thus, the timeline mechanism uniﬁes Correspondence relations with autosegmental
associations. Both are encoded by overlap on the constituent timeline. This ﬂeshes
out a proposal of McCarthy & Prince (1995):
(23) “The re-casting of autosegmental association in terms of correspondence relations
may be expected to have consequences for the analysis of tonal, harmonic, and
related phenomena. We do not explore these ideas here, though they are clearly
worth developing.” (p. 22)

Traditional view: The input to Gen is an underlying form drawn from the lexicon.
Gen(x) produces all candidates whose input tiers exactly encode x.
Broader view (Tranel 1994): The input to Gen is an abstract morpheme (or sequence
6

thereof). Gen(x) produces all candidates whose input tiers are compatible with x. So
Gen picks the underlying form(s).
Competing candidates may then diﬀer to some extent even on their input tiers:
(24) a. phonologically conditioned allomorphy: candidates try diﬀerent allomorphs on the input timeline, and the constraints decide what works best.
(Tranel’s “free suppletion”)
b. ﬂoating tones and features: the lexicon speciﬁes only that H falls somewhere on the input. Diﬀerent candidates try diﬀerent locations for it in the
input. The output may or may not correspond.
c. ﬂoating morphemes, templatic morphology: morphology speciﬁes the order
of underlying segments within each morpheme, but lets the morphemes
overlap so that their segments intermix freely on the input tiers. These
segments may or may not be preserved in the output.
d. epenthesis (CC ⇒ CV C): The lexicon doesn’t specify whether input
segments are adjacent, so Gen can create candidates that push them apart:
V
C[
C[

[
]C
]C

]V
C[
C[

]C
]C

syncope (CV C ⇒ CC) is represented similarly:
C[
C[

]C
]C
V[

C[
C[

]C
]C

]V

But for good phonological reasons, we’d like other constraints to regard
as adjacent the two surface C’s in the latter case (and the two C’s in the
former). See §12 for a very general solution.
6. This straitjacket ﬁts pretty comfortably
This section illustrates how all the types of primitive constraints are ubiquitous
across diﬀerent areas of phonology.
My apologies in advance for any errors or mischaracterizations in these lists. Some of
these translations to OTP are not exact, but appear to act correctly on the data
in the papers cited. Also, note that sometimes there is more than one way to
paraphrase a constraint.
(“ROA” citations (http://ruccs.rutgers.edu/roa.html) not further listed in the bibliography.)

Key to unfamiliar notation:

7

f eat
f eat
µs
µw
x
X
Seg

version of feature on output tier
version of feature on input tier (underline denotes “underlyin’ ” material)
strong mora, containing onset and nucleus (Zec 1988).
weak mora, containing coda if any (Zec 1988).
(One could also use explicit constituents Ons, Nuc, Coda.)
a 2ndary stress mark over a stress-bearing unit (ﬁrst layer of the grid)
a word-primary stress mark (second layer of the grid)
segmental root node (alternatively, C or V), as distinguished
from morphological root Root

Some implication constraints from the literature.
(25) “Same edge” implication:
a. Features
1.
]raised → ]upper
Align[R][U]. Bradshaw ROA-93j.
b. Prosody
1.
]PrWd → ]σ
Align: Wd] = σ]. Myers, ROA-6.
Iambic Quantity: In a rhythmic unit (W S), S
2.
]F → ]µw
is heavy. Hung, ROA-24.
Align-H: Align(PrWd , R, heavy syllable, R).
3.
]PrWd → ]µw
Kager, ROA-70.
4.
Foot-Form (trochaic): If there is a head, it is
x[ → F [
on the L. Hung, ROA-9. Trochaic: Align(´ , L,
σ
Foot, L). Kager, ROA-35.
5.
Align(Ft, L; Head(Ft), L). Bermudez-Otero,
F [ → x[
ROA-136.
6.
]PrWd → ]X
Final-Str: Align(domain, R, σ , R). Kager,
´
ROA-35.
7.
]F → ]σ
Fill: Respect the usual prosodic hierarchy, without catalexis. Inkelas, ROA-39. (Take catalexis
to be F [ σ [ · · · ]σ · · · ]F , and assume another constraint ]F ⊥ σ.)
c. Feature-prosody interaction
1.
Align(Ft, L, Onset): The left edge of a foot must
F [ → C[
always be aligned to the onset of the ﬁrst syllable in the foot. Goedemans, ROA-26. (Assume
we also have F [ → σ [ .)
2.
NoOnset: Stressless syllables do not have onsets.
C [ → x[
Hammond, ROA-58.
3.
Align(H tone, L, PWd, L). Myers, ROA-6.
H [ → P rW d [
4.
]µs → ]son , et al. HNuc: A higher sonority nucleus is more harmonic than one of lower sonority. F´ry, ROA-34,
e
following P&S 1993.
Project(N, V): Nucleus must be a vowel. Oost5.
]µs → ]V
endorp, ROA-84.
Strong Onset: Syllables begin with a closure
6.
σ [ → A0 [
A0 . Bakovic, ROA-96.

8

7.
8.

( ]σ and ]hi ) → ]back
( ]low and ]σ ) → ]x

9.

( ]hi and ]σ ) → ( ]x or ]back )

d. I-O relationships
1.
Hdom [ → H [
2.

]AT R → ]AT Rdom

*. . . i ]σ . Kenstowicz, ROA-103.
No [a]: [a] is not allowed in unstressed open syllables.
Kager,
ROA-93a.
No [i]: [i] is not allowed in unstressed open syllables.
Kager,
ROA-93a.

Left-Hd: The leftmost tone bearer of a tone span
must be a head. Myers, ROA-6.
BA-rt: Align(Anchor-s, R; [atr]-domain, R).
Cole & Kisseberth, ROA-22.

e. Morphophonology
1.
]P lural → ]son

Son]Pl: Plurals end in a sonorant. Golston &
Wiese, ROA-100.
Morpheme-Foot-Left: Align(Morpheme, L,
2.
M[ → F[
Foot, L), where “a single violation is assessed
for every morpheme which does not meet this requirement.” Crowhurst, ROA-19. See also Kager,
ROA-35; Bermudez-Otero, ROA-136.
3.
Align-WD: Align(root, Left; PrWd, Left). Cohn
Root [ → P rW d [
& McCarthy, ROA-25.
Align(Root, σ; L,R): “Align root morpheme
4.
Root [ → σ [ , etc.
boundaries with syllable bondaries at both
edges.” Yip, ROA-14.
5.
Red = Foot. ROA-16. Carleton & Myers, ROARed [ → F [
, ]Red → ]F
16. (Also need Red ⊥ F [ .)
(26) “Opposite edge” implication:
a. Features
Project(lax, N): Lax vow1.
]lax → µw [
els are followed by additional
weight (coda consonant or 2nd
half of a diphthong). Oostendorp, ROA-84.
[ → ]lax
Project(N, lax): Only lax
2.
µw
vowels are followed by additional weight (as if tense vowels bore their own). Oostendorp, ROA-84.
3. ( ]vel and C [ ) → ( ]cont or ]voi ) No kC. Bradshaw, ROA-93j.
b. Prosody
1.
]x → µ [
Rhythm: A stressed element must
be followed by an unstressed element.
Hung, ROA-9. (Also need ]x ⊥ x [ .)
2. ( ]σ and σ [ )
NoLapse: No adjacent unstressed sylla→ ( ]x or x [ )
bles. Anttila, ROA-63.

9

3.

( ]σ and σ [ )
→ ( ]x or x [ or ]F or

F[

Lapse: Adjacent unstressed syllables are
) separated by a foot boundary. Green,
ROA-45.

c. I-O relationships
Local: An output TBU bearing tone t must be
1.
H [ → ]H
adjacent to [input] TBU b, where b [also] bears t.
Bickmore (credited to Myers), ROA-161. (Only
right spreading actually appears. Note the variation H [ → ( H [ or ]H ).)
d. Morphophonology
1.
Align-SFX: Align(Aﬃx, L, PrWd , R). McAﬃx [ → ]PrWd
Carthy & Prince, ROA-7.
(27) “Interior” implication:
a. Features
1. rd → back Round → Back. Cole & Kisseberth, ROA98.
2. nas → voi NasVoi. Itˆ, Mester, & Padgett, ROA-38;
o
Yip, ROA-81.
3. V → AT Rdom
WSA-lf: Align([atr]-dom, L; Word, L). Cole
& Kisseberth, ROA-22. (This gets the correct, gradient eﬀect of spreading as far as
possible.)
4. nas → Seg, etc.
Features like nas surface only if linked to a
(faithful or epenthetic) segmental root. Zoll,
ROA-143.
5. AT R → AT Rdom Not explicitly mentioned in Cole & Kisseberth, ROA-22, but clearly needed there.
6. σ → ( H or L )
Max-ET: Every TBU must have a correspondent tone. McCarthy & Prince (1995).
Spec(Tone): Every TBU has a tone. Zoll,
ROA-143, after Prince & Smolensky (1993).
7. V → ( f ront or round or low ) Color: A vowel is [front] or [round]
if it is [-low]. Kirchner, ROA-4.
8. C → ( cor or lab or dors )
C → FC : A [+cons] root dominates a consonantal place feature.
Oostendorp, ROA-84.
9. ( AT Rdom and V ) → AT R
Express: Express[ATR]. Cole &
Kisseberth, ROA-22.
b. Prosody
1. µ → σ
Parse µ: Every mora must be parsed into a syllable.
Myers, ROA-6.
2. µw → x
Weight-to-Stress: Heavy syllables are stressed.
Hung, ROA-9 (following Prince 1990).
3. Seg → σ Parse(Root): Every root node must be associated
with a syllable or mora.
c. Feature-prosody interaction

10

1.

2.
3.
4.

5.

σ → H

Fill(σ): A syllable must be associated with a [high tone. Myers,
ROA-6.
V → N uc
V → σ: A vowel must be a syllable
head. Green, ROA-8.
N uc → son σ → R: A syllable head must be at
least a resonant. Green, ROA-8.
round → ( back or stress )
MaV(Pro) (Marked Vowel (Prominent)): Umlauted vowels fall in
prominent syllables. F´ry, ROA-34.
e
x → ( lo or hi or f ront or back ) Non-Head( ): Stressed schwa is
prohibited.
Cohn & McCarthy,
ROA-25.

d. I-O relationships
1. H → H, etc.

Parse(T): A tone must be parsed. Myers,
ROA-6.
2. lab → lab, etc.
MaxPl: Parse underlying place features.
Lombardi, ROA-105. Max, McCarthy &
Prince 1995.
*Ins(F): Do not insert features. Kirchner,
3. lab → lab, etc.
ROA-4. Dep, McCarthy & Prince 1995.
4. µ → µ
WeightIdent: If an input vowel is bimoraic,
then so is the correspondent output vowel.
Pater, ROA-107. See also WeightIdent,
Alderete, ROA-131.
StressIdent: Parse lexical stress. Pater,
5. x → x
ROA-107. Head-Max: Alderete, ROA-131
(from McCarthy 1995).
6. ( x and Aﬃx ) → x
Head-MaxAﬃx : Specializes Head-Max to
aﬃxes. Alderete, ROA-131.
Head-Dep: Every segment contained in a
7. ( Seg and x ) → Seg
prosodic head in S2 [output] has a correspondent in S1 [input]. Roberts-Kohno, ROA-93k.
8. ( nas and x ) → nas, etc. HeadSyll-Max(F): No features are deleted
from (parsed?) segments in the head syllable.
Yip, ROA-159.
Head-Wt-Ident: No lengthening or short9. ( µ and x ) → µ, etc.
ening of stressed syllables. Alderete, ROA131.
10. H → ( H or L ) TPFaith: Preserve tonal prominence proﬁle.
Tranel, ROA-72; Zoll, ROA-143.
e. Morphophonology

11

1.

MW d → X

2.

M → P rW d

3.

Root → F

HeadProj: M W d [ . . . Head(PWd) . . . ]M W d . A
lexical head must project a prosodic head: every MWd constituent must include a stressed
vowel. (A strengthened replacement for Lx≈Pr.)
Kennedy, ROA-139.
MorPa: At least one element of a morpheme is
incorporated into a prosodic word. Oostendorp,
ROA-84.
Ft-Root: The root must overlap with a foot.
Buckley, ROA-93c.

(28) “Mixed” implication:
a. Features
1. upper → µ [

Minimal Tone Association (MTA):
[+upper] must be linked to more
than one TBU. Bradshaw, ROA-93j.
NoAff: Disallows non-palatal af2. ( ]A0 and Af [ ) → pal
fricates. Bakovic, ROA-96.
3. ( ]C and C [ ) → ( cor or dors . . . ) Contact: Coda should share place
with the following Onset [if any].
Kenstowicz, ROA-30.
4. ( ]nas and C [ ) → voi
*NC: No nasal – voiceless obstruent
˚
sequences. Pater, ROA-160.
5. ( voi and C [ ) → ]nas ≫ . . .
. . . ≫ No-NC-Link, Itˆ, Mester,
o
& Padgett, ROA-38.
b. Prosody
1. F → µ [
Min-2m: A metrical foot contains
at least two moras. Green & Kenstowicz, ROA-101.
2. PrWd → σ [
Disyll: The left and right edges
of the PrWd, must coincide, respectively, with the left and right edges
of diﬀerent syllables. Kager, ROA70.
(Also need PrWd [ → Seg [ ,
]PrWd → ]Seg .)
3. ( ]σ and σ [ ) → ( ]F or F [ or F ) Parse-2: One of two adjacent stress
units should be parsed by a foot.
Kager, ROA-35. Parse-Adj-Syll.
Alderete, ROA-94.
c. Feature-prosody interaction
FtOnset{rt} : Align(Ft that is in
1. ( F [ and Root ) → C [
root, L, C or Root, L). Buckley,
ROA-56.
Lower:
Long vowels are low.
2. ( V and µw [ ) → low
Vµµ → [Low]. Cole & Kisseberth,
ROA-98.
d. I-O relationship

12

1.

( H and

σ[

) → ]H

T-Bin: A tone span can have at
most one non-head (in a domain);
limits spread to one syllable from
underlying tone. Myers, ROA-6.

Some clash constraints from the literature.
(29) “Same edge” clash:
a. Prosody
1.
]x ⊥ ]PrWd

*Final Stress. Anttila, ROA-63. Non-Fin(´ ).
σ
Cohn & McCarthy, ROA-25. Cf. Rhythm, Hung,
ROA-9.
2.
]F ⊥ ]PrWd . NonFinality: Feet should not be word-ﬁnal.
N´ Chios´in, ROA-89 (credited to Spaelti as
i
a
WeakEdge(P-Cat)), et al.
b. Feature-prosody interaction
1.
*Ons/N. Smolensky, ROA-86 (following Prince &
σ [ ⊥ nas [
Smolensky 1993).
2.
]lax ⊥ ]σ
Project(lax, N): Lax vowels are followed by additional weight (coda consonant or 2nd half of a
diphthong). Oostendorp, ROA-84.
*ObsNuc. Pater, ROA-107.
3.
]obs ⊥ ]µw
4. ( ]C and ]σ ) ⊥ ]lab
CodaCond: Syllable-ﬁnal consonant may not
have place features. Lombardi, ROA-105.
c. I-O relations
1.
*Align(H,L)-I/O: High tone in output must not
H[ ⊥ H[
left-align with its position in input. Bickmore,
ROA-161.
Free-V: PrWd -ﬁnal vowels must not be parsed.
2. ( ]PrWd and ]µw ) ⊥ ]V
So ﬁnal heavy syllables are CVC, not CVV.
Kager, ROA-70.
d. Morphophonology
1.
]M ⊥ ]low
*a]: No low vowel in a morpheme-ﬁnal open syllable. Kager, ROA-93c.
*Align(H, L, Source Morpheme, L) with no vio2.
H[ ⊥ M[
lation by distance. Bickmore, ROA-161.
(30) “Opposite edge” clash:
a. Features
1.
]H ⊥ H [
OCP: *FF, where F is a parsed [output]
feature speciﬁcation. “Furthermore, we
will consider two tones to be adjacent
if they are associated by parsed associations with adjacent tone bearers” (so domains are unnecessary). Myers, ROA-6.
2.
]son ⊥ voi [
*rg: No sonorant-voiced clusters. N´
i
Chios´in, ROA-89.
a
3. ( ]nas and C [ ) ⊥ ]voi
*NC: No nasal – voiceless obstruent se˚
quences. Pater, ROA-160.
13

4.

( ]vel and ]cont ) ⊥

5.

( ]nas and

b. Prosody
1.
]x ⊥ x [

2.

]F ⊥

F[

C[

lab [

) ⊥ voi

No VelCont Lab: No sequence of a velar continuant before a labial. Bradshaw,
ROA-93j.
No-NC-Link. Itˆ, Mester, & Padgett,
o
ROA-38.

*Clash: No adjacent strong beats on the grid.
Kager, ROA-35. NoClash. Anttila, ROA-63.
Cf. Rhythm, Hung, ROA-9.
*FtFt: Feet must not be adjacent. Kager, ROA35.

(31) “Interior” clash:
a. Features
1. voi ⊥ gl
2. tense ⊥ low
3.

phar ⊥ dor

4.

hi ⊥ low

5.
6.

Seg ⊥ W ord
H ⊥ W ord

7.

low ⊥ W ord

*[voiced, gl]: No implosives. Buckley, ROA-57.
*TENSE-low: No tense low vowels. Benua, ROA74.
*Mid (no mid vowels): *[Phar, Dor]. Alderete,
ROA-94.
Non-occurrence of +hi and +low. Kirchner,
ROA-4.
*Structure(Root). Myers, ROA-6.
*Struct(A): There must be no association. Myers,
ROA-6.
*[low]. Oostendorp, ROA-84 (following Prince &
Smolensky 1993).

b. Prosody
1. σ ⊥ PrWd

Monosyllabicity: The fewer syllables, the better. Noske, ROA-109. *Struc(σ): No syllables.
Zoll, ROA-143.
c. Feature-prosody interaction
1. µw ⊥ ( gl and . . . ) Coda-h: A /h/ may only occur in an onset. Oostendorp, ROA-84.
(32) “Mixed” clash:
a. Features
1. hi ⊥ Seg [ , lo ⊥ Seg [
*Mult-Height: No multiply linked
height features. Kirchner, ROA-4.
*Spread: Do not insert association
2. f ront ⊥ f ront [ , etc.
lines.
3. RdDom ⊥ HiDom [ , etc.
Uniformity: The (round-)harmony domain must be monotonic: high or low.
Cole & Kisseberth, ROA-98. (Cf. parasitic harmony.)
4. ( ]V and V [ ) ⊥ hi, etc. NoLongVowel: Two adjacent vocalic
roots may not be linked to the same material (but diphthongs are allowed). Oostendorp, ROA-84.
b. Prosody

14

1.

F ⊥

M[

Tautomorphemic-Foot:
∗ F [ σ M [ σ ]F .
Crowhurst, ROA-19.
2. µs ⊥ Seg [
*Branch(S)µ. Walker, ROA-142.
3. F ⊥ σ [ , etc.
Unarity: A prosodic category p contains no more
than one of the next lower prosodic category p-1.
A. Green, ROA-115.
4.
SyllInt: Syllable integrity (violable). Everett,
F[ ⊥ σ
ROA-163.
5. σ ⊥ ( ]C and C [ ) *Complex: Only one element can be in onset or
coda position.
c. Feature-prosody interaction
1. C ⊥ ]σ
Geminate: No geminate consonants. Oostendorp, ROA-84.
2. σ ⊥ H [ , etc.
*Complex(T): A tone-bearer must not be associated with more than one tone. Myers, ROA-6.
3. σ ⊥ C [
NoComplexOnsetOrRhyme. Noske, ROA-109.
4. µ ⊥ C [
*Complex: No complex onset or coda. Kenstowicz, ROA-103.
5. rime ⊥ nas [ , etc. Rhyme Harmony: All segments in the rhyme
must share any nasal speciﬁcation. Yip, ROA-81,
ROA-135.
d. Morphophonology
1. Red ⊥ F [ , Red = Foot. Carleton & Myers, ROA-16. (Also
need Red [ → F [ , ]Red → ]F .)
2. lab ⊥ M [
Monolog: The edges of a morphological domain
should be crisp; no feature should be linked both
to an edge segment of that domain and to an element outside of the domain. Oosetndorp, ROA84. (Also need lab ⊥ ]M .)
3. ( x [ and V [ ) ⊥ Root FtOnset{rt} : Align(Ft that is in root, L, C or
Root, L). Buckley, ROA-56.
7. Straitjacketing phonology keeps it local
Two important diﬀerences between F [ → PrWd [ and Align(F , L, PrWd , L):
• The → family doesn’t measure distance.
E.g., (´ σ)(´ σ)(´ σ)σ violates F [ → PrWd [ twice, once for each non-initial foot.
σ σ σ
• The → family isn’t only used for edges.
Interestingly, Zoll (1996:137–38) has independently argued that licensing has just
those properties (leading to her constraint Coincide(x,y)):
“There are two properties of licensing which distinguish it from the cases of aﬃxation
discussed [in M&P (1993)].
“First, licensing of marked structure never involves an injunction to be as close to a
strong position as possible. Rather, licensing always constitutes an all-or-nothing
proposition whereby marked structures are licit in licensed positions but ill-formed
everywhere else.”
“The second important diﬀerence is that licensing does not strictly involve coincidence

15

of edges or distance from an edge, but is concerned rather with membership in a
constituent which may be peripheral ... [e.g.] heavy syllables belong to the ﬁrst foot.”

Q: Is this local version of alignment powerful enough?
A: Perhaps so. For cases where it’s really necessary to measure distance, for example
to control the width of a feature domain:
(33) a. σ → XDom: X-domain should be as wide as possible (contain many σ’s).
b. σ ⊥ XDom: X-domain should be as narrow as possible (contain few σ’s).
Note that this trick, unlike GA, automatically speciﬁes the units of measurement. It
also avoids other deﬁnitional problems with GA.
Q: Is Generalized Alignment too powerful?
A: Probably. It’s a family of non-local constraints that do addition. That lets us
express very non-local, unattested phenomena.
Example of unwarranted power: The GA constraint in (34) wants the ﬂoating tone
to anchor as close to the center of the word as possible (subject to higher-ranked
constraints).
(34) Notes:
1. ´ denotes tone, not stress.
2. The nth column records the degree of misalignment of the nth syllable, at least
if GA measures this in syllables rather than segments (or moras: see Mester &
Padgett (1993)).
3. Assume that high-ranked faithfulness constraints rule out other candidates.
For example, as there is only one ﬂoating tone underlyingly, σ σ σ σ σ σ σ is ruled
´´´´´´´
out by Dep(H).
σσσσσσσ + [H]
a. σ σσσσσσ
´
b. σ´ σσσσσ
σ
c. σσ´ σσσσ
σ
♥ d. σσσ´ σσσ
σ
e. σσσσ´ σσ
σ
f. σσσσσ´ σ
σ
g. σσσσσσ´
σ

Align(σ,
0
*
**
***
****
*****
******

R, H, R)
*
**
0
*
*
0
**
*
***
**
****
***
*****
****

***
**
*
0
*
**
***

****
***
**
*
0
*
**

*****
****
***
**
*
0
*

******
*****
****
***
**
*
0

= 21
= 16
= 13
= 12
= 13
= 16
= 22

↑
candidate’s total viols
violations contributed by 2nd syllable’s misalignment

If there were two ﬂoating tones, they’d want to anchor at 1/4 and 3/4 of the way
through the word.
This kind of non-local behavior via GA is unattested to my knowledge. It is also
beyond the power of known computational OT methods, in particular the ﬁnite-state
method of Ellison (1995) and the context-free method of Tesar (1996). The primitive
constraints are provably incapable of producing such behavior.
8. In dire straits: What about non-local phenomena?
Since OTP uses only the primitive constraints of §4, it claims that all phonology is
16

local.
Some apparently non-local phenomena can be reanalyzed:
• Metrical stress. Most non-local constraints in the literature concern metrical
stress, which has received both local and non-local analyses in the past.
– Local: Non-OT, iterative accounts (e.g., Prince 1983, Halle & Vergnaud
1987, Kager 1993, Hayes 1985, 1995).
– Non-local: McCarthy & Prince (1993) propose using Generalized Alignment constraints to measure the distance from each foot to the edge of
the word.
– Local: Eisner (1997c) gives an OTP typology of metrical stress. See §9.
– Local: “Incremental” constraints as described in §11. (Cf. Kager (1994),
who argues for a greedy Align evaluated “foot by foot.”)
• Intervocalic phenomena (e.g., lenition). A constraint like *VsV (Green &
Kenstowicz 1995) appears non-local, since [s] must look to both sides to decide
whether it can surface as s or must become z. However, a local reanalysis is
possible.
Sample reanalysis: For *VsV, say that /s/ always wants to surface as [z], but only
succeeds in the VsV context. For instance: ( cor and cont ) → voi rules out [s] in
favor of [z]. It is outranked by ]z → ( ]voi or V [ ), which says that any surface
[z] not underlyingly voiced is followed by a vowel, and also by the mirror image of
this, so that such a [z] must also be preceded by a vowel. Here ]z abbreviates
( ]cor and ]cont and ]voi ).

However, reduplication occupies a special role in phonology, in that it is inherently
non-local; it cannot be reanalyzed as local.
Therefore, to handle reduplication in OTP we need a representational trick (similar
to Clements 1985). Translate the Correspondence account of McCarthy & Prince
(1995) into OTP as follows:
a. As for all relations, OTP can enforce Correspondence only locally, so
Correspondent elements must always overlap on the timeline,
b. Thus, I-B faithfulness requires I and B to occupy the same portion of the
timeline. (on separate input and output tiers)
c. B-R faithfulness apparently requires R and B to occupy the same portion
of the timeline. But this would rule out B-R juncture eﬀects. which require
B to precede R or vice-versa. (e.g., enforcement of *VhV in Javanese)
d. So instead require R (on the output tier) and a copy of B (on its own
special tier) to occupy the same portion of the timeline.
e. Gen produces only candidates in which this copy of B is perfect. Thus, Gen
must know how to do reduplication of morphemes, not just aﬃxation.
f. Now all the non-locality is handled within Gen (the locus of morphology:
see §5). The violable constraints remain local.
(35) Some candidates produced by Gen on RED(b dah)-e. In Javanese, ﬁrst
candidate wins.
17

a.

b dah-e
b da b da -e
[Red ][Base][Af]
b da ւ

b.

b dah-e
b dahb dah-e
[Red ][Base][Af]
b dahւ

c.

d.

b dah-e
b dahb da -e
[Red ][Base][Af]
b da ւ
b dah-e
b da b dah-e
[Red ][Base][Af]
b dahւ

Input tier (used for I-B faithfulness)
Output tier: passed to phonetics (here violates Max-IO)
Morphemic tier: mentioned by some constraints
Exact copy of base (used for B-R correspondence)

Satisﬁes Max-IO, but violates surface constraint *VhV
Exact copy of this candidate’s base (enforced by Gen)

Satisﬁes Max-IO & *VhV, but not Dep-BR, i.e., C → C
Exact copy of this candidate’s base (enforced by Gen)

Satisﬁes Max-IO, but not *VhV or Max-BR, i.e, C → C
Exact copy of this candidate’s base (enforced by Gen)

In a language also requiring I-R faithfulness (McCarthy & Prince’s (1995)
Full Model), Gen must put two copies on the input tier: b dah b dah-e.
Haplology is a related example that may also be intrinsically non-local. (Yip 1995)
9. Stress typology
Eisner (1997c) proposes a small set of primitive constraints, which are freely reranked
to get the attested iambic systems. Replacing each constraint by its mirror image
gives the attested trochaic systems. (All rankings have been tested exhaustively by
computer.)
The result is a uniﬁed ﬁne-grained account of the following phenomena described by
Hayes (1995):
(36)

1. asymmetric foot shape typology
2. iambic lengthening
3. unbounded stress
4. simple word-initial and word-ﬁnal stress
5. LR and RL footing, but no clear cases of RL iambs
6. syllable and foot extrametricality
7. no cases of ﬁnal-syllable extrametricality for LR trochees (new!)
8. strong and weak prohibitions on degenerate feet
9. word-level stress, including prominence-based systems

The asymmetries in (36) are reduced to (i) the universal onset-coda asymmetry and
(ii) the universal tendency of extrametricality to be ﬁnal.
18

A few key ideas in this analysis:
(37) Alternating stress is the result of constraints against unary feet (which
prevents stress clash) and against stress lapse.
(38) Stress prefers to fall on weak moras uw , which carry weight.
• Consequence in iambic systems: The strong (right) edge of the foot likes
to be supported by a weak mora, so stressed light syllables are avoided
except when necessary to prevent lapses. This explains iambic foot form,
iambic lengthening, and unbounded weight-prominence systems.
(Whereas in trochaic systems, stressed lights are no worse than
stressed heavies: there’s never a weak mora at the strong (left) edge.)
• Consequence in trochaic systems: Moraic trochees of the form (µs µw )
´
are avoided because the stress mark ´ would like to spread rightward
onto µw . Such spreading yields syllabic trochees.
(Whereas in iambic systems, stress starts out on µw and has no
incentive to spread leftward: so there are no syllabic iambs.)
(39) The “natural” lapse-avoiding pattern on an odd string of light syllables is
σ´ σ´ σ, which is LR iambs (σ´ )(σ´ )σ or RL trochees σ(´ σ)(´ σ). The other
σ σ
σ σ
σ σ
common case, LR trochees, results from right extrametricality, (´ σ)(´ σ) σ ,
σ σ
when right extrametricality is outranked by a desire to include another
stress when possible: (´ σ)(´ σ)(´ σ). RL iambs aren’t attested because left
σ σ σ
extrametricality is extremely rare (Kashaya).
Novel prediction from (39): When extrametricality is high-ranked enough to be
surface-true, LR trochees are impossible. These two properties should be in complementary distribution: they are just diﬀerent manifestations of the same mechanism
(namely, the right edge of the word pushing feet away).
Conﬁrmation: Among trochaic languages, Hayes (1995) lists 32 that are LR and 21
that have ﬁnal-syllable extrametricality. There is no overlap! That is, no language
has preantipenultimate stress on even strings (´ σ)(´ σ)σ σ , but not on odd strings
σ σ
(´ σ)(´ σ) σ . The right edge of the word can push feet away, but since primitive
σ σ
constraints are local, it can’t demand that they be pushed all the way to the left of
the word.
10. Computational issues: Theories in straitjackets are docile
Q: Gen produces inﬁnitely many candidates. How do we ﬁnd the best?
A: By using intensional descriptions of the inﬁnite sets. For example, son → voi
≫ µw ⊥ voi yields “Utterances in which obstruent codas are voiceless and
sonorants are voiced.”
If we stick to the primitive constraints, we can use ﬁnite-state automata as our
intensional descriptions. E.g., the inﬁnite set of candidates that survive constraints
1–5 can be described in ﬁnite space with an automaton. Then we use constraint 6 to
narrow this set down further, etc.
(Strategy is due to Ellison (1994); Eisner (1997b) gives an eﬃcient version.)

19

Analogy: In mathematics, we don’t work directly with the inﬁnite sum
1
1
1
1
+
+
+
+ ...
1·2
2·3
3·4
4·5
∞

1
because that would take forever. Instead we manipulate the notation
.
i=1 i·(i+1)
This lets us draw interesting conclusions without processing the terms one by one:
∞

i=1

1
=
i · (i + 1)

∞

i=1

1
1
−
=
i
i+1

∞

i=1

1
−
i

∞

i=1

1
= (1 +
i+1

∞

i=2

1
)−
i

∞

i=2

1
=1
i

BUT: To ﬁnd the optimal candidate is NP-hard on the size of the grammar (Eisner
1997b). So while the automaton algorithm above is usually eﬃcient, any algorithm
will be slow for a pathological grammar. This is unfortunate for learning theories
that may blunder into such a grammar and try to test it.
In addition to the algorithm to ﬁnd the optimal candidate, we can also characterize
the expressive power of OTP:
(40) a. Equal in power to OTFS (Ellison 1994), in which Gen is a ﬁnite-state
transducer and the constraints are arbitrary weighted FSAs. Any formal
OTP grammar can be converted to a formal OTFS grammar, and viceversa.
OTP is nonetheless more restrictive. OTP grammars are more ﬁnegrained, so they make stronger predictions about the eﬀect of reranking
constraints. Also, they are limited to a smallish set of universal tiers.
b. Less power than if Generalized Alignment were allowed. The crucial
example is (34)—a funny trick that GA can do but OTP can’t.
c. More power than systems of ordered rewrite rules, i.e., ﬁnite-state transducers. The crucial example is a trick that OTP can do but ﬁnite-state
transducers can’t (adapted from a non-linguistic example in Frank & Satta
1998):
This grammar puts H tones on either the high or the low vowels—
whichever are fewer. D [ → P rW d [ , ]D → ]P rW d , H ⊥ ]V
, hi → ( H or D ) , ( lo and D ) → H ≫ H ⊥ H
11. A possible extension: Incremental evaluation of constraints
The example in (40c) should make us uncomfortable about OT! Linguistically,
grammars that count like that are unattested. So OT appears too powerful.
Indeed, ordered rewrite rules were always descriptively adequate. OT was supposed
to give us more elegant or explanatory descriptions, not admit counting tricks as a
possibility in human language. So:
(41)

Can we somehow pare OT back to the same descriptive power as
ordered rewrite rules—the power of a ﬁnite-state transducer?

20

There are also computational reasons to ask this question. Transducers are eﬃcient, well understood, and invertible. In particular, when an OT grammar can be
compiled into a transducer, we immediately obtain wonderful things:
(42) a. a much faster generation algorithm (UR → its optimal SR or SRs)
b. a comprehension algorithm (SR → the UR or URs for which it’s optimal)
Note that (42b) (which would be just as fast as (42a)) produces all possible URs; this
possibly large set can be eﬃciently
(43) a. intersected with a lexicon to ﬁnd legitimate URs
b. intersected with lexical constraints to guess URs for novel words
c. used for phonological learning
Well, imagine that we allow diﬀerent modes of evaluation for each primitive
constraint:
(44) Traditional Summing: The candidates with the fewest total violations survive
to be considered by subsequent constraints.
(45) k-Bounded: Like (44), but the constraint can only distinguish among 0, 1, 2,
. . . , k − 1, or “k or more” violations; it can’t count beyond k.
(For example, 1-bounded evaluation just asks “were there violations?”
without asking how many.)
Frank & Satta (1998) and Karttunen (1998) recommend allowing only k-bounded
constraints, since then we remain within ﬁnite-state power. This is true, but
somewhat awkward as a solution:
• Big inelegant transducers: A grammar that sets k just large enough to handle “supercalifragilisticexpialidocious” would yield a much larger and more
redundant transducer than would the comparable derivational grammar.
• Lack of generalization: Moreover, unlike the derivational grammar, it would
fail to generalize to longer words and phrases.
So I’ll propose two additional modes:
(46) Incremental LR:
• The constraint scores each candidate incrementally from Left to Right.
• This LR scoring proceeds in parallel for all candidates, staying in
lockstep with reference to the candidates’ common UR.
• Sudden death for any candidate as soon as it incurs a violation, unless
all other surviving candidates simultaneously suﬀer an equally bad
violation.
(47) Incremental RL: The mirror image of (46).

21

Summing evaluation is shown in (48–49). To understand incremental evaluation,
consider a case where all (remaining) candidates have 4 syllables. Then (50) operates
as if exploded into (51). It prefers to postpone the pain of NoCoda violations as long
as possible, even at the cost of having more violations later.
(48) NoCoda: ]σ ⊥ ]C / traditional summing
NoCoda
(49)
♥

bantondibo
bantodimbon

**
***

(50) NoCodaLR: ]σ ⊥ ]C / incremental LR
NoCoda-σ 1 NoCoda-σ 2 NoCoda-σ 3 NoCoda-σ 4
(51)
♥

bantondibo
bantodimbon

*

*!

*

*

*

(52) NoCodaRL: ]σ ⊥ ]C / incremental RL
NoCoda-σ 4 NoCoda-σ 3 NoCoda-σ 2 NoCoda-σ 1
(53)
♥

bantondibo
bantodimbon

*
*!

*

*

These ideas can be formalized, and the following theorem holds:
(54) Theorem: Suppose an OT grammar consists of primitive constraints each
of which is evaluated as LR, RL, or k-bounded. (That is, the grammar
never employs the traditional summation of (44).) Then one can construct a
ﬁnite-state transducer that is equivalent to the grammar.
Now the question is: Can we get away with this linguistically?
Tentatively, yes:
Most of the time, incremental evaluation is indistinguishable from summing
evaluation. When does it matter? Consider (51):
• Higher-ranked constraints have forced us to choose between satisfying NoCoda
on the 2nd vs. the 3rd syllable: we can’t satisfy it on both.
• This corresponds to the crucial-ranking pattern

*!
*

in the tableau.)

• But the situation as depicted in (51) doesn’t tend to arise, since the two codas
don’t interact in any way.
• Such tradeoﬀs arise (for syllabiﬁcation) only in the context of directional
syllabiﬁcation (see Mester & Padgett 1994)—which is resolved LR or RL!
Indeed, such forced tradeoﬀs—where only one constraint is at issue, but the language
must choose where to violate it—are generally resolved by violating as late (LR) or
as early (RL) as the higher-ranked constraints will allow. Examples:

22

(55)

1. Directional syllabiﬁcation: /cvcccv/ → [cv.cVc.cv] vs. [cvc.cV.cv].
To favor the latter, as in Cairene Arabic, evaluate Dep incrementally LR so as
to postpone epenthetic material; this is classically known as LR syllabiﬁcation.
2. Footing: (σσ)(σσ)σ vs. (σσ)σ(σσ) vs. σ(σσ)(σσ). (Parse(σ): σ → F .)
3. Inﬁxation: Tagalog [gr-um-adwet]. (NoOverlap: ]Af f ix ⊥ Stem.)
4. Docking of ﬂoating features (e.g., tone). (Either V → H or V ⊥ H.)
5. Resolution of OCP violations (e.g., Grassman’s Law). (Likewise.)
6. End rule: σ σ` σ´ . (Likewise.)
` σ σ
7. Marking of special domains that license additional material, like the ﬁrst foot
in a word. (Likewise.)

Warning: To evaluate a form incrementally, a constraint must be deﬁned so as to
specify not just how many violations there are, but also where they fall. I have not
yet addressed this issue for the primitive constraint families.
12. A possible extension: Capturing tier adjacency
In a standard autosegmental representation (Goldsmith 1990), even feet with gaps
between them would be treated as adjacent on their tier, as would adjacent tones and
adjacent vowels. This makes it easy to discuss OCP eﬀects, long-distance spreading,
tonology, the notion of “leftmost X,” etc.
The strictly local timeline representations of (15b) lose this adjacency. On the
timeline, two H tones on the same tier can’t see each other through intervening
consonants.
One way out is provided by Optimal Domains Theory (Cole & Kisseberth 1994):
each phonetic feature silently projects a wider domain, and adjacency is deﬁned
locally in terms of these domains. This is functional but somewhat clumsy.
A possible alternative, more in the spirit of autosegmental phonology:
(56)

• Every constraint has a set of relevant tiers.
• The relevant tiers are those that participate directly in the constraint,
plus any others mentioned on the side.
• When evaluating a constraint, we collapse (ignore, skip over) any time
intervals where nothing is happening on the relevant tiers.

Under this “collapsing convention,” we could write the OCP for H tone as in (57).
This says that adjacent H’s must be separated by a ]P rW d —where two H’s are
considered to be adjacent if there are no H’s, PrWd’s, or L’s between them (these
being the relevant tiers mentioned in the constraint). Eﬀectively, (57) treats (58) as
if it were (59).
(57) OCP(H): ( ]H and

H[

) →

P rW d [

23

(L)

(58) [
[H]
b
(59)

u

PrWd
[
]PrWd ]
[H]
[H] [H]
[L]
d u g o t i n o
. . . other tiers . . .

[
PrWd
[
] PrWd ]
[H]H] [H] H ]
[
[
[L]

Similarly, under this convention, (60) requires that any H tone be spread onto the
vowel to its right. (61) restricts this requirement to within the PrWd (just as in
(57)).
(60) HHarm(Right): H [ ⊥ ]V
(61) HHarmBounded(Right): ( ]H and

V

[ ) ⊥ ]P rW d

Note that (62) no longer enforces right extrametricality: it mentions only F and
PrWd as relevant tiers, causing (64) to be interpreted as (65). Instead we need to
use (63), which recognizes syllabiﬁed material and requires it to intervene.
(62) Extrametricality: ]F ⊥ ]P rW d
(63) Extrametricality: ]F ⊥ ]P rW d
(64)

[
PrWd
]
[ F ] F ]
[
[σ]σ]σ]σ]σ]
[ [ [ [
. . . other tiers . . .

(65)

(σ)

[ PrWd ]
[ F ] F ]
[

A formal version of the collapsing convention:
(66) a. Any two brackets are considered to coincide in time unless they are separated by an entire constituent x [ ]x on a relevant tier, or more generally
by a conﬁguration x [ ]y where x and y are both relevant tiers.
b. That is, conﬁgurations x [ ]y on the relevant tiers resist collapse.
c. Equivalently, imagine conﬂating the relevant tiers to get a sequence of
labeled brackets in time. Any contiguous subsequence of the form
··· ] ≤ ] ≤ ] ≤ [ ≤ [ ≤ [ ≤ [ ···
(i.e., 0 or more ] followed by 0 or more [)
is considered to be contemporaneous for purposes of this constraint.
Really this interprets adjacency as in Goldsmith (1990), while allowing each constraint to specify which tiers to conﬂate. (Tier conﬂation is traditionally an operation
that happens at some point during a derivation—but OT is not derivational.)
A weaker alternative to (66c) is also worth considering. This would not collapse (64)
into (65):
24

(67) Consider only sequences of the form
··· ] = ] = ] ≤ [ = [ = [ = [ ···
to be contemporaneous.
The collapsing convention of (66) or (67) can easily be used to solve the problem
noted in (24d).
It generalizes the previous solution to (24d) (outlined in Albro 1997), which eﬀectively
combined (67) with the notion that all surface tiers were relevant to a constraint that
mentioned any surface tier, and all underlying tiers were relevant to a constraint that
mentioned any underlying tier.

13. What role do these primitive constraints play in OT?
Three kinds of constraints:
• Primitive: the implication and clash families.
• Compound: Expressible as a monolithic block of primitive constraints in ﬁxed
order. (Kennedy (1996) uses blocks of Align constraints.)
• Complex: Any constraint not expressible in this restricted framework.
The balance among these remains to be seen. It is not yet clear what compound or
complex constraints are actually needed (and which of the primitive constraints are
not needed!).
We must also discover which of the formally possible primitive constraints are
favored in real languages (on phonetic or other grounds), and what rankings are
favored. OTP claims that languages use only local constraints; but it does not say
which local constraints.
Meanwhile,
• Primitive constraints are “safe to use.” They’re simple, radically local, and
ubiquitous.
• The restricted version of OT allowing only primitive constraints—called OTP—
is easy to reason within and is computationally tractable.
• OTP is the simplest explanation that stands a chance. Let’s reﬁne it against
the data, adding new core constraints only as we’re forced to.
• If OTP is close to correct, it may be fruitful to reanalyze languages and typologies within OTP. (E.g., Eisner (1997c) gives a detailed reanalysis of stress
typology that has some empirical beneﬁts.)
References (exclusive of §6)
Albro, Daniel M. 1997. Evaluation, Implementation, and Extension of Primitive
Optimality Theory. M.A. thesis, UCLA.
Albro, Daniel M. 1998. Three formal extensions to Primitive Optimality Theory. In Mark
Ellison (ed.), Proceedings of the Fourth Meeting of the ACL Special Interest Group in
Computational Phonology. Association for Computation Linguistics. Quebec, July.
Bird, Steven, & Ewan Klein. 1990. Phonological events. Journal of Linguistics 26, 33–56.
Buckley, Eugene. 1995. Alignment and constraint domains in Manam stress. Ms. ROA56.

25

Clements, G. N. 1985. The problem of transfer in nonlinear morphology. Cornell Working
Papers, Cornell University, Ithaca, NY, Fall.
Cole, Jennifer, & Charles Kisseberth. 1994. An optimal domains theory of harmony.
Studies in the Linguistic Sciences 24: 2.
Crowhurst, Megan 1994. Prosodic alignment and misalignment in Diyari, Dyirbal, and
Gooniyandi: an optimizing approach. WCCFL 13. ROA-19.
Eisner, Jason M. 1997a. What constraints should OT allow? LSA Annual Meeting,
Chicago, January.
Eisner, Jason. 1997b. Eﬃcient generation in primitive Optimality Theory. Proceedings of
the 35th Annual Meeting of the Association for Computational Linguistics and the
8th Conference of the European Association for Computational Linguistics, Madrid,
July.
Eisner, Jason. 1997c. FootForm decomposed: Using primitive constraints in OT. SCIL
8. MIT Working Papers in Linguistics, Cambridge, MA.
Ellison, T. Mark. 1994. Phonological derivation in optimality theory. Proceedings of
COLING, 1007-1013.
F´ry, Caroline. 1994. Umlaut and Inﬂection in German. Ms. ROA=34.
e
Frank, Robert, and Giorgio Satta. 1998. Optimality theory and the generative complexity
of constraint violability. Computational Linguistics 24(2):307–315.
Goldsmith, John A. 1976. Autosegmental Phonology. Ph.D. thesis, MIT.
Goldsmith, John A. 1990. Autosegmental and Metrical Phonology. Cambridge, MA:
Blackwell.
Green, Thomas and Michael Kenstowicz. 1995. The Lapse constraint. FLSM 6,1: 1-14.
Bloomington, Ind: Indiana University Linguistics Club. ROA-101.
Green, Thomas. 1994. The conspiracy of completeness. Proceedings of Rutgers
Optimality Workshop I. ROA-8.
Halle, Morris and Jean-Roger Vergnaud. 1978. Metrical structures in phonology. Ms.,
Dept. of Linguistics, MIT.
Hammond, Michael. 1995. Syllable parsing in English and French. Ms. ROA-58.
Hayes, Bruce. 1985. Iambic and trochaic rhythm in stress rules. BLS 11, 429–446.
Hayes, Bruce. 1995. Metrical Stress Theory: Principles and Case Studies. University of
Chicago Press.
Itˆ, Junko, & Armin Mester. 1994. Realignment. Proceedings of the June 1994 Utrecht
o
Prosodic Morphology Workshop.
Kager, Ren´. 1993. Alternatives to the Iambic-Trochaic Law. LI 11, 381–432.
e
Kager, Ren´. 1994. Ternary rhythm in alignment theory. Ms. ROA-35.
e
Karttunen, Lauri. 1998. The Proper Treatment of Optimality in computational phonology. Proceedings of FSMNLP’98 (International Workshop on Finite-State Methods in
Natural Language Processing), 1–12. Bilkent University, Ankara, Turkey.
Kirchner, Robert. 1993. Turkish vowel harmony and disharmony: an optimality theoretic
account. Proceedings of Rutgers Optimality Workshop I. ROA-4.
McCarthy, John, & Alan Prince. 1986. Prosodic morphology. Ms., Brandeis University.
McCarthy, John, & Alan Prince. 1993. Generalized alignment. Yearbook of Morphology,
ed. Geert Booij & Jaap van Marle, pp. 79-153. Kluwer.
McCarthy, John and Alan Prince. 1995. Faithfulness and reduplicative identity. In
Jill Beckman et al., eds., Papers in Optimality Theory. UMass, Amherst: GLSA.
259–384.
Mester, Armin and Jaye Padgett. 1994. Directional syllabiﬁcation in Generalized
Alignment. Phonology at Santa Cruz 3, October. ROA-1.
Myers, Scott. 1994. OCP eﬀects in Optimality Theory. Ms. ROA-6.
Polgardi, Krisztina. 1995. Derived Environment Eﬀects and Optimality Theory. Handout,
Tilburg “Derivational Residue” Conference. ROA-93i.
Prince, Alan, & Paul Smolensky. 1993. Optimality theory: constraint interaction in generative grammar. Technical Reports of the Rutgers University Center for Cognitive
Science.

26

Prince, Alan. 1983. Relating to the Grid. LI 14, 19–100.
Selkirk, Elizabeth. 1980. Prosodic domains in phonology: Sanskrit revisited. In Mark
Aranoﬀ and Mary-Louise Kean, eds., Juncture, pp. 107–129. Anna Libri, Saratoga,
CA.
Smolensky, Paul. 1995. On the structure of the constraint component Con of UG. Talk at
UCLA, April 7. ROA-86.
Tranel, Bernard. 1994. French liaison and elision revisited: A uniﬁed account within
Optimality Theory. In Claudia Parodi et al., Aspects of Romance Linguistics:
Selected Papers from the Linguistic Symposium on Romance Languages XXIV.
Washington, D.C.: Georgetown University Press. ROA-15.
Yip, Moira. 1994. Phonological constraints, optimality, and phonetic realization in
Cantonese. Ms. ROA-14.
Yip, Moira. 1995. Identity Avoidance in Phonology and Morphology. Proceedings of the
Conference on Morphology and its relation to Syntax and Phonology. University of
California at Davis, May. ROA-82.
Zec, Draga. 1988. Sonority constraints on prosodic structure. Ph.D. dissertation,
Stanford University.
Zoll, Cheryl. 1996. Parsing Below the Segment in a Constraint Based Framework. Ph.D.
dissertation, University of California at Berkeley. ROA-143.

27

