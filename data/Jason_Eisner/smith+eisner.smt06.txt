Quasi-Synchronous Grammars:
Alignment by Soft Projection of Syntactic Dependencies
David A. Smith and Jason Eisner
Department of Computer Science
Center for Language and Speech Processing
Johns Hopkins University
Baltimore, MD 21218, USA
{dasmith,eisner}@jhu.edu
Abstract
Many syntactic models in machine translation are channels that transform one
tree into another, or synchronous grammars that generate trees in parallel. We
present a new model of the translation process: quasi-synchronous grammar (QG).
Given a source-language parse tree T1 , a
QG deﬁnes a monolingual grammar that
generates translations of T1 . The trees
T2 allowed by this monolingual grammar are inspired by pieces of substructure in T1 and aligned to T1 at those
points. We describe experiments learning
quasi-synchronous context-free grammars
from bitext. As with other monolingual
language models, we evaluate the crossentropy of QGs on unseen text and show
that a better ﬁt to bilingual data is achieved
by allowing greater syntactic divergence.
When evaluated on a word alignment task,
QG matches standard baselines.

1
1.1

Motivation and Related Work
Sloppy Syntactic Alignment

This paper proposes a new type of syntax-based
model for machine translation and alignment. The
goal is to make use of syntactic formalisms, such as
context-free grammar or tree-substitution grammar,
without being overly constrained by them.
Let S1 and S2 denote the source and target sentences. We seek to model the conditional probability
p(T2 , A | T1 )

(1)

where T1 is a parse tree for S1 , T2 is a parse tree
for S2 , and A is a node-to-node alignment between
them. This model allows one to carry out a variety
of alignment and decoding tasks. Given T1 , one can
translate it by ﬁnding the T2 and A that maximize
(1). Given T1 and T2 , one can align them by ﬁnding
the A that maximizes (1) (equivalent to maximizing
p(A | T2 , T1 )). Similarly, one can align S1 and S2
by ﬁnding the parses T1 and T2 , and alignment A,
that maximize p(T2 , A | T1 ) · p(T1 | S1 ), where
p(T1 | S1 ) is given by a monolingual parser. We
usually accomplish such maximizations by dynamic
programming.
Equation (1) does not assume that T1 and T2 are
isomorphic. For example, a model might judge T2
and A to be likely, given T1 , provided that many—
but not necessarily all—of the syntactic dependencies in T1 are aligned with corresponding dependencies in T2 . Hwa et al. (2002) found that human translations from Chinese to English preserved
only 39–42% of the unlabeled Chinese dependencies. They increased this ﬁgure to 67% by using
more involved heuristics for aligning dependencies
across these two languages. That suggests that (1)
should be deﬁned to consider more than one dependency at a time.
This inspires the key novel feature of our models:
A does not have to be a “well-behaved” syntactic
alignment. Any portion of T2 can align to any portion of T1 , or to NULL. Nodes that are syntactically
related in T1 do not have to translate into nodes that
are syntactically related in T2 —although (1) is usually higher if they do.
This property makes our approach especially
promising for aligning freely, or erroneously, translated sentences, and for coping with syntactic diver-

23
Proceedings of the Workshop on Statistical Machine Translation, pages 23–30,
New York City, June 2006. c 2006 Association for Computational Linguistics

gences observed between even closely related languages (Dorr, 1994; Fox, 2002). We can patch together an alignment without accounting for all the
details of the translation process. For instance, perhaps a source NP (ﬁgure 1) or PP (ﬁgure 2) appears
“out of place” in the target sentence. A linguist
might account for the position of the PP auf diese
Frage either syntactically (by invoking scrambling)
or semantically (by describing a deep analysistransfer-synthesis process in the translator’s head).
But an MT researcher may not have the wherewithal
to design, adequately train, and efﬁciently compute
with “deep” accounts of this sort. Under our approach, it is possible to use a simple, tractable syntactic model, but with some contextual probability
of “sloppy” transfer.
1.2

From Synchronous to Quasi-Synchronous
Grammars

Because our approach will let anything align to
anything, it is reminiscent of IBM Models 1–5
(Brown et al., 1993). It differs from the many approaches where (1) is deﬁned by a stochastic synchronous grammar (Wu, 1997; Alshawi et al., 2000;
Yamada and Knight, 2001; Eisner, 2003; Gildea,
2003; Melamed, 2004) and from transfer-based systems deﬁned by context-free grammars (Lavie et al.,
2003).
The synchronous grammar approach, originally
due to Shieber and Schabes (1990), supposes that T2
is generated in lockstep to T1 .1 When choosing how
to expand a certain VP node in T2 , a synchronous
CFG process would observe that this node is aligned
to a node VP in T1 , which had been expanded in T1
by VP → NP V . This might bias it toward choosing to expand the VP in T2 as VP → V NP, with the
new children V aligned to V and NP aligned to NP .
The process then continues recursively by choosing
moves to expand these children.
One can regard this stochastic process as an instance of analysis-transfer-synthesis MT. Analysis
chooses a parse T1 given S1 . Transfer maps the
context-free rules in T1 to rules of T2 . Synthesis
1

The usual presentation describes a process that generates
T1 and T2 jointly, leading to a joint model p(T2 , A, T1 ). Dividing by the marginal p(T1 ) gives a conditional model p(T2 , A |
T1 ) as in (1). In the text, we directly describe an equivalent
conditional process for generating T2 , A given T1 .

24

deterministically assembles the latter rules into an
actual tree T2 and reads off its yield S2 .
What is worrisome about the synchronous process is that it can only produce trees T2 that are
perfectly isomorphic to T1 . It is possible to relax
this requirement by using synchronous grammar formalisms more sophisticated than CFG:2 one can permit unaligned nodes (Yamada and Knight, 2001),
duplicated children (Gildea, 2003)3 , or alignment
between elementary trees of differing sizes rather
than between single rules (Eisner, 2003; Ding and
Palmer, 2005; Quirk et al., 2005). However, one
would need rather powerful and slow grammar formalisms (Shieber and Schabes, 1990; Melamed et
al., 2004), often with discontiguous constituents, to
account for all the linguistic divergences that could
arise from different movement patterns (scrambling,
wh-in situ) or free translation. In particular, a synchronous grammar cannot practically allow S2 to be
any permutation of S1 , as IBM Models 1–5 do.
Our alternative is to deﬁne a “quasi-synchronous”
stochastic process. It generates T2 in a way that is
not in thrall to T1 but is “inspired by it.” (A human
translator might be imagined to behave similarly.)
When choosing how to expand nodes of T2 , we are
inﬂuenced both by the structure of T1 and by monolingual preferences about the structure of T2 . Just as
conditional Markov models can more easily incorporate global features than HMMs, we can look at
the entire tree T1 at every stage in generating T2 .

2

Quasi-Synchronous Grammar

Given an input S1 or its parse T1 , a quasisynchronous grammar (QG) constructs a monolingual grammar for parsing, or generating, the possible translations S2 —that is, a grammar for ﬁnding
appropriate trees T2 . What ties this target-language
grammar to the source-language input? The grammar provides for target-language words to take on
2
When one moves beyond CFG, the derived trees T1 and
T2 are still produced from a single derivation tree, but may be
shaped differently from the derivation tree and from each other.
3
For tree-to-tree alignment, Gildea proposed a clone operation that allowed subtrees of the source tree to be reused in generating a target tree. In order to preserve dynamic programming
constraints, the identity of the cloned subtree is chosen independently of its insertion point. This breakage of monotonic tree
alignment moves Gildea’s alignment model from synchronous
to quasi-synchronous.

koennte/VVFIN:3

Tschernobyl/NE:6

dann/ADV:1

etwas/ADV:0

spaeter/ADJ:1

could:3

an/PREP:0

kommen/VVINF:0

./S-SYMBOL:10

Then:1

we:2

Reihe/NN:0

deal:4

with:5

die/ART:0

.:10

later:9

Chernobyl:6

time:8

some:7

Figure 1: German and English dependency parses and their alignments from our system where German
is the target language. Tschernobyl depends on k¨ nnte even though their English analogues are not in a
o
dependency relationship. Note the parser’s error in not attaching etwas to sp¨ ter.
a
German: Tschernobyl k¨ nnte dann etwas sp¨ ter an die Reihe kommen .
o
a
Literally: Chernobyl could then somewhat later on the queue come.
English: Then we could deal with Chernobyl some time later .

bekommen/VVpast:5

Auf/PREP:8

Frage/NN:10

habe/VHFIN:2

ich/PPRO:1

leider/ADV:4

did:2

Antwort/NN:7

keine/INDEF:3

diese/DEM:9

./S-SYMBOL:11

I:1

not:3

unfortunately:4

receive:5

.:11

answer:7

an:6

to:8

question:10

this:9

Figure 2: Here the German sentence exhibits scrambling of the phrase auf diese Frage and negates the object
of bekommen instead of the verb itself.
German: Auf diese Frage habe ich leider keine Antwort bekommen .
Literally: To this question have I unfortunately no answer received.
English: I did not unfortunately receive an answer to this question .

25

multiple hidden “senses,” which correspond to (possibly empty sets of) word tokens in S1 or nodes in
T1 . To take a familiar example, when parsing the
English side of a French-English bitext, the word
bank might have the sense banque (ﬁnancial) in one
sentence and rive (littoral) in another.
The QG4 considers the “sense” of the former bank
token to be a pointer to the particular banque token
to which it aligns. Thus, a particular assignment of
S1 “senses” to word tokens in S2 encodes a word
alignment.
Now, selectional preferences in the monolingual
grammar can be inﬂuenced by these T1 -speciﬁc
senses. So they can encode preferences for how T2
ought to copy the syntactic structure of T1 . For example, if T1 contains the phrase banque nationale,
then the QG for generating a corresponding T2 may
encourage any T2 English noun whose sense is
banque (more precisely, T1 ’s token of banque) to
generate an adjectival English modiﬁer with sense
nationale. The exact probability of this, as well as
the likely identity and position of that English modiﬁer (e.g., national bank), may also be inﬂuenced by
monolingual facts about English.
2.1

Deﬁnition

A quasi-synchronous grammar is a monolingual
grammar that generates translations of a sourcelanguage sentence. Each state of this monolingual
grammar is annotated with a “sense”—a set of zero
or more nodes from the source tree or forest.
For example, consider a quasi-synchronous
context-free grammar (QCFG) for generating translations of a source tree T1 . The QCFG generates the
target sentence using nonterminals from the cross
product U × 2V1 , where U is the set of monolingual
target-language nonterminals such as NP, and V1 is
the set of nodes in T1 .
Thus, a binarized QCFG has rules of the form
A, α

→

A, α

→ w

B, β C, γ

(2)
(3)

where A, B, C ∈ U are ordinary target-language
nonterminals, α, β, γ ∈ 2V1 are sets of source tree
4

By abuse of terminology, we often use “QG” to refer to the
T1 -speciﬁc monolingual grammar, although the QG is properly
a recipe for constructing such a grammar from any input T1 .

26

nodes to which A, B, C respectively align, and w is
a target-language terminal.
Similarly, a quasi-synchronous tree-substitution
grammar (QTSG) annotates the root and frontier
nodes of its elementary trees with sets of source
nodes from 2V1 .
2.2

Taming Source Nodes

This simple proposal, however, presents two main
difﬁculties. First, the number of possible senses for
each target node is exponential in the number of
source nodes. Second, note that the senses are sets
of source tree nodes, not word types or absolute sentence positions as in some other translation models.
Except in the case of identical source trees, source
tree nodes will not recur between training and test.
To overcome the ﬁrst problem, we want further restrictions on the set α in a QG state such as A, α . It
should not be an arbitrary set of source nodes. In the
experiments of this paper, we adopt the simplest option of requiring |α| ≤ 1. Thus each node in the target tree is aligned to a single node in the source tree,
or to ∅ (the traditional NULL alignment). This allows
one-to-many but not many-to-one alignments.
To allow many-to-many alignments, one could
limit |α| to at most 2 or 3 source nodes, perhaps further requiring the 2 or 3 source nodes to fall in a particular conﬁguration within the source tree, such as
child-parent or child-parent-grandparent. With that
conﬁgurational requirement, the number of possible senses α remains small—at most three times the
number of source nodes.
We must also deal with the menagerie of different source tree nodes in different sentences. In other
words, how can we tie the parameters of the different
QGs that are used to generate translations of different source sentences? The answer is that the probability or weight of a rule such as (2) should depend
on the speciﬁc nodes in α, β, and γ only through
their properties—e.g., their nonterminal labels, their
head words, and their grammatical relationship in
the source tree. Such properties do recur between
training and test.
For example, suppose for simplicity that |α| =
|β| = |γ| = 1. Then the rewrite probabilities of (2)
and (3) could be log-linearly modeled using features
that ask whether the single node in α has two children in the source tree; whether its children in the

source are the nodes in β and γ; whether its nonterminal label in the source is A; whether its fringe
in the source translates as w; and so on. The model
should also consider monolingual features of (2) and
(3), evaluating in particular whether A → BC is
likely in the target language.
Whether rule weights are given by factored generative models or by naive Bayes or log-linear models,
we want to score QG productions with a small set of
monolingual and bilingual features.
2.3

Synchronous Grammars Again

Finally, note that synchronous grammar is a special
case of quasi-synchronous grammar. In the contextfree case, a synchronous grammar restricts senses to
single nodes in the source tree and the NULL node.
Further, for any k-ary production
X 0 , α0 →

X 1 , α1 . . . X k , αk

a synchronous context-free grammar requires that
1. (∀i = j) αi = αj unless αi = NULL,
2. (∀i > 0) αi is a child of α0 in the source tree,
unless αi = NULL.
Since NULL has no children in the source tree, these
rules imply that the children of any node aligned to
NULL are themselves aligned to NULL . The construction for synchronous tree-substitution and treeadjoining grammars goes through similarly but operates on the derivation trees.

3

Parameterizing a QCFG

Recall that our goal is a conditional model of
p(T2 , A | T1 ). For the remainder of this paper, we
adopt a dependency-tree representation of T1 and
T2 . Each tree node represents a word of the sentence
together with a part-of-speech tag. Syntactic dependencies in each tree are represented directly by the
parent-child relationships.
Why this representation? First, it helps us concisely formulate a QG translation model where the
source dependencies inﬂuence the generation of target dependencies (see ﬁgure 3). Second, for evaluation, it is trivial to obtain the word-to-word alignments from the node-to-node alignments. Third, the
part-of-speech tags are useful backoff features, and
in fact play a special role in our model below.
27

When stochastically generating a translation T2 ,
our quasi-synchronous generative process will be inﬂuenced by both ﬂuency and adequacy. That is, it
considers both the local well-formedness of T2 (a
monolingual criterion) and T2 ’s local faithfulness
to T1 (a bilingual criterion). We combine these in
a simple generative model rather than a log-linear
model. When generating the children of a node in
T2 , the process ﬁrst generates their tags using monolingual parameters (ﬂuency), and then ﬁlls in in the
words using bilingual parameters (adequacy) that select and translate words from T1 .5
Concretely, each node in T2 is labeled by a triple
(tag, word, aligned word). Given a parent node
(p, h, h ) in T2 , we wish to generate sequences of
left and right child nodes, of the form (c, a, a ).
Our monolingual parameters come from a simple
generative model of syntax used for grammar induction: the Dependency Model with Valence (DMV) of
Klein and Manning (2004). In scoring dependency
attachments, DMV uses tags rather than words. The
parameters of the model are:
1. pchoose (c | p, dir): the probability of generating c as the next child tag in the sequence of
dir children, where dir ∈ {lef t, right}.
2. pstop (s | h, dir, adj): the probability of generating no more child tags in the sequence of dir
children. This is conditioned in part on the “adjacency” adj ∈ {true, f alse}, which indicates
whether the sequence of dir children is empty
so far.
Our bilingual parameters score word-to-word
translation and aligned dependency conﬁgurations.
We thus use the conditional probability ptrans (a |
a ) that source word a , which may be NULL, translates as target word a. Finally, when a parent word
h aligned to h generates a child, we stochastically
decide to align the child to a node a in T1 with
one several possible relations to h . A “monotonic”
dependency alignment, for example, would have
h and a in a parent-child relationship like their
target-tree analogues. In different versions of the
model, we allowed various dependency alignment
conﬁgurations (ﬁgure 3). These conﬁgurations rep5
This division of labor is somewhat artiﬁcial, and could be
remedied in a log-linear model, Naive Bayes model, or deﬁcient generative model that generates both tags and words conditioned on both monolingual and bilingual context.

resent cases where the parent-child dependency being generated by the QG in the target language maps
onto source-language child-parent, for head swapping; the same source node, for two-to-one alignment; nodes that are siblings or in a c-command relationship, for scrambling and extraposition; or in
a grandparent-grandchild relationship, e.g. when a
preposition is inserted in the source language. We
also allowed a “none-of-the-above” conﬁguration, to
account for extremely mismatched sentences.
The probability of the target-language dependency treelet rooted at h is thus:
P (D(h) | h, h , p) =
dir∈{l,r} c∈depsD (p,dir)

P (D(c) | a, a , c) × pstop (nostop | p, dir, adj)
×pchoose (c | p, dir)
×pconf ig (conﬁg) × ptrans (a | a )
pstop (stop | p, dir, adj)

4

Experiments

We claim that for modeling human-translated bitext,
it is better to project syntax only loosely. To evaluate
this claim, we train quasi-synchronous dependency
grammars that allow progressively more divergence
from monotonic tree alignment. We evaluate these
models on cross-entropy over held-out data and on
error rate in a word-alignment task.
One might doubt the use of dependency trees
for alignment, since Gildea (2004) found that constituency trees aligned better. That experiment, however, aligned only the 1-best parse trees. We too will
consider only the 1-best source tree T1 , but in constrast to Gildea, we will search for the target tree T2
that aligns best with T1 . Finding T2 and the alignment is simply a matter of parsing S2 with the QG
derived from T1 .
4.1

Data and Training

We performed our modeling experiments with the
German-English portion of the Europarl European
Parliament transcripts (Koehn, 2002). We obtained
monolingual parse trees from the Stanford German
and English parsers (Klein and Manning, 2003).
Initial estimates of lexical translation probabilities
28

came from the IBM Model 4 translation tables produced by G IZA ++ (Brown et al., 1993; Och and
Ney, 2003).
All text was lowercased and numbers of two or
more digits were converted to an equal number of
hash signs. The bitext was divided into training
sets of 1K, 10K, and 100K sentence pairs. We held
out one thousand sentences for evaluating the crossentropy of the various models and hand-aligned
100 sentence pairs to evaluate alignment error rate
(AER).
We trained the model parameters on bitext using
the Expectation-Maximization (EM) algorithm. The
T1 tree is fully observed, but we parse the target language. As noted, the initial lexical translation probabilities came from IBM Model 4. We initialized the
monolingual DMV parameters in one of two ways:
using either simple tag co-occurrences as in (Klein
and Manning, 2004) or “supervised” counts from the
monolingual target-language parser. This latter initialization simulates the condition when one has a
small amount of bitext but a larger amount of target data for language modeling. As with any monolingual grammar, we perform EM training with the
Inside-Outside algorithm, computing inside probabilities with dynamic programming and outside
probabilities through backpropagation.
Searching the full space of target-language dependency trees and alignments to the source tree consumed several seconds per sentence. During training, therefore, we constrained alignments to come
from the union of G IZA ++ Model 4 alignments.
These constraints were applied only during training
and not during evaluation of cross-entropy or AER.
4.2

Conditional Cross-Entropy of the Model

To test the explanatory power of our QCFG, we evaluated its conditional cross-entropy on held-out data
(table 1). In other words, we measured how well a
trained QCFG could predict the true translation of
novel source sentences by summing over all parses
of the target given the source. We trained QCFG
models under different conditions of bitext size and
parameter initialization. However, the principal independent variable was the set of dependency alignment conﬁgurations allowed.
From these cross-entropy results, it is clear that
strictly synchronous grammar is unwise. We ob-

(a) parent-child

(b) child-parent

sehe

see

ich

Antwort

likes

gern

(d) siblings

auf

schwimmt

I

bekommen

(c) same node
Voelkerrecht

swimming

(e) grandparent-grandchild
answer

Wahlkampf

to

international

(f) c-command
campaign

von

law

2003

2003

sagte
Was

dass

bought
what

kaufte

Figure 3: When a head h aligned to h generates a new child a aligned to a under the QCFG, h and a may be related in the
source tree as, among other things, (a) parent–child, (b) child–parent, (c) identical nodes, (d) siblings, (e) grandparent–grandchild,
(f) c-commander–c-commandee, (g) none of the above. Here German is the source and English is the target. Case (g), not pictured
above, can be seen in ﬁgure 1, in English-German order, where the child-parent pair Tschernobyl k¨ nnte correspond to the words
o
Chernobyl and could, respectively. Since could dominates Chernobyl, they are not in a c-command relationship.
Permitted conﬁgurations
∅ or parent-child (a)
+ child-parent (b)
+ same node (c)
+ all breakages (g)
+ siblings (d)
+ grandparent-grandchild (e)
+ c-command (f)
No alignments allowed

CE
at 1k
43.82
41.27
41.01
35.63
34.59
34.52
34.46
60.86

CE
10k
22.40
21.73
21.50
18.72
18.59
18.55
18.59
53.28

CE
100k
13.44
12.62
12.38
11.27
11.21
11.17
11.27
46.94

Table 1: Cross-entropy on held-out data with different dependency conﬁgurations (ﬁgure 3) allowed, for 1k, 10k, and 100k
training sentences. The big error reductions arrive when we
allow arbitrary non-local alignments in condition (g). Distinguishing some common cases of non-local alignments improves
performance further. For comparison, we show cross-entropy
when every target language node is unaligned.

tain comparatively poor performance if we require
parent-child pairs in the target tree to align to parentchild pairs in the source (or to parent-NULL or
NULL - NULL ). Performance improves as we allow
and distinguish more alignment conﬁgurations.
4.3

Word Alignment

links. As with many word-alignment evaluations,
we do not score links to NULL. Just as for crossentropy, we see that more permissive alignments
lead to better performance (table 2).
Having selected the best system using the crossentropy measurement, we compare its alignment error rate against the standard G IZA ++ Model 4 baselines. As Figure 4 shows, our QCFG for German →
English consistently produces better alignments than
the Model 4 channel model for the same direction,
German → English. This comparison is the appropriate one because both of these models are forced
to align each English word to at most one German
word. 6

5

Conclusions

With quasi-synchronous grammars, we have presented a new approach to syntactic MT: constructing a monolingual target-language grammar that describes the aligned translations of a source-language
sentence. We described a simple parameterization
6

We computed standard measures of alignment precision, recall, and error rate on a test set of 100 handaligned German sentence pairs with 1300 alignment
29

For German → English MT, one would use a German →
English QCFG as above, but an English → German channel
model. In this arguably inappropriate comparison, Figure 4
shows, the Model 4 channel model produces slightly better
word alignments than the QG.

Permitted conﬁgurations
∅ or parent-child (a)
+ child-parent (b)
+ same node (c)
+ all breakages (g)
+ siblings (d)
+ grandparent-grandchild (e)
+ c-command (f)

AER
at 1k
40.69
43.17
43.22
37.63
37.87
36.78
37.04

AER
10k
39.03
39.78
40.86
30.51
33.36
32.73
33.51

AER
100k
33.62
33.79
34.38
25.99
29.27
28.84
27.45

Our second system searches a target-language vocabulary for the optimal T2 given the input T1 .

Acknowledgements
This work was supported by a National Science
Foundation Graduate Research Fellowship for the
ﬁrst author and by NSF Grant No. 0313193.

Table 2: Alignment error rate (%) with different dependency
conﬁgurations allowed.
0.5

QCFG
Giza4
Giza4 bk

0.45

alignment error rate

0.4

0.35

0.3

0.25

0.2
1000

10000

100000

1e+06

training sentence pairs

Figure 4: Alignment error rate with best model (all breakages). The QCFG consistently beat one G IZA ++ model and
was close to the other.

with gradually increasing syntactic domains of locality, and estimated those parameters on GermanEnglish bitext.
The QG formalism admits many more nuanced
options for features than we have exploited. In particular, we now are exploring log-linear QGs that
score overlapping elementary trees of T2 while considering the syntactic conﬁguration and lexical content of the T1 nodes to which each elementary tree
aligns.
Even simple QGs, however, turned out to do quite
well. Our evaluation on a German-English wordalignment task showed them to be competitive with
IBM model 4—consistently beating the GermanEnglish direction by several percentage points of
alignment error rate and within 1% AER of the
English-German direction. In particular, alignment
accuracy beneﬁted from allowing syntactic breakages between the two dependency structures.
We are also working on a translation decoding using QG. Our ﬁrst system uses the QG to ﬁnd optimal
T2 aligned to T1 and then extracts a synchronous
tree-substitution grammar from the aligned trees.
30

References
H. Alshawi, S. Bangalore, and S. Douglas. 2000. Learning
dependency translation models as collections of ﬁnite state
head transducers. CL, 26(1):45–60.
P. F. Brown, S. A. Della Pietra, V. J. Della Pietra, and R. L.
Mercer. 1993. The mathematics of statistical machine translation: Parameter estimation. CL, 19(2):263–311.
Y. Ding and M. Palmer. 2005. Machine translation using probabilistic synchronous dependency insertion grammars. In
ACL, pages 541–548.
B. J. Dorr. 1994. Machine translation divergences: A formal
description and proposed solution. Computational Linguistics, 20(4):597–633.
J. Eisner. 2003. Learning non-isomorphic tree mappings for
machine translation. In ACL Companion Vol.
H. J. Fox. 2002. Phrasal cohesion and statistical machine translation. In EMNLP, pages 392–399.
D. Gildea. 2003. Loosely tree-based alignment for machine
translation. In ACL, pages 80–87.
D. Gildea. 2004. Dependencies vs. constituents for tree-based
alignment. In EMNLP, pages 214–221.
R. Hwa, P. Resnik, A. Weinberg, and O. Kolak. 2002. Evaluating translational correspondence using annotation projection. In ACL.
D. Klein and C. D. Manning. 2003. Accurate unlexicalized
parsing. In ACL, pages 423–430.
D. Klein and C. D. Manning. 2004. Corpus-based induction of
syntactic structure: Models of dependency and constituency.
In ACL, pages 479–486.
P. Koehn.
2002.
Europarl:
A multilingual
corpus for evaluation of machine translation.
http://www.iccs.informatics.ed.ac.uk/˜pkoehn/publications/europarl.ps.
A. Lavie, S. Vogel, L. Levin, E. Peterson, K. Probst, A. F.
Llitj´ s, R. Reynolds, J. Carbonell, and R. Cohen. 2003. Exo
periments with a Hindi-to-English transfer-based MT system
under a miserly data scenario. ACM Transactions on Asian
Language Information Processing, 2(2):143 – 163.
I. D. Melamed, G. Satta, and B. Wellington. 2004. Generalized
multitext grammars. In ACL, pages 661–668.
I. D. Melamed. 2004. Statistical machine translation by parsing. In ACL, pages 653–660.
F. J. Och and H. Ney. 2003. A systematic comparison of various
statistical alignment models. CL, 29(1):19–51.
C. Quirk, A. Menezes, and C. Cherry. 2005. Dependency
treelet translation: Syntactically informed phrasal SMT. In
ACL, pages 271–279.
S. M. Shieber and Y. Schabes. 1990. Synchronous treeadjoining grammars. In ACL, pages 253–258.
D. Wu. 1997. Stochastic inversion transduction grammars and
bilingual parsing of parallel corpora. CL, 23(3):377–403.
K. Yamada and K. Knight. 2001. A syntax-based statistical
translation model. In ACL.

