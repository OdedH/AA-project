Online EM for Unsupervised Models
NAACL – June 3, 2009
Percy Liang

Dan Klein

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed

2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM

accuracy

0.8
0.6
0.4
0.2
20

40

60

80

iterations

2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM
Online EM

accuracy

0.8
0.6
0.4
0.2
20

40

60

80

iterations

2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM
Online EM (done wrong)

accuracy

0.8
0.6

Online EM (done right)

0.4
0.2
20

40

60

80

iterations

2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM
Online EM (done wrong)

accuracy

0.8
0.6

Online EM (done right)

0.4
0.2
20

40

60

80

iterations

Observations:
1. Online EM is faster than batch EM

2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM
Online EM (done wrong)

accuracy

0.8
0.6

Online EM (done right)

0.4
0.2
20

40

60

80

iterations

Observations:
1. Online EM is faster than batch EM
2. Online EM improves accuracy(!)
2

Based on a true story
Part-of-speech induction:
DT NNP
NNP
VBD
The European Commission agreed
1.0

Batch EM
Online EM (done wrong)

accuracy

0.8
0.6

Online EM (done right)

0.4
0.2
20

40

60

80

iterations

Observations:
1. Online EM is faster than batch EM
2. Online EM improves accuracy(!)
3. Details of online EM do matter
2

Four tasks
DT NNP
NNP
VBD
The European Commission agreed

POS tagging

3

Four tasks
DT NNP
NNP
VBD
The European Commission agreed

look|at|the|book

POS tagging

Word segmentation

3

Four tasks
DT NNP
NNP
VBD
The European Commission agreed

look|at|the|book

POS tagging

Word segmentation

Baseball
...Matt Williams has demonstrated throughout
his career that he will NOT wait for good
pitches to hit...

Document classiﬁcation

3

Four tasks
DT NNP
NNP
VBD
The European Commission agreed

look|at|the|book

POS tagging

Word segmentation

Baseball
...Matt Williams has demonstrated throughout
his career that he will NOT wait for good
pitches to hit...

Document classiﬁcation

the
la

European
Commission

Commission
europ´enne
e

Word alignment

3

Unsupervised induction
Setting:
x(1)

x(2)

···

x(n)

4

Unsupervised induction
Setting:
x(1)

x(2)

···

x(n)

z(1)

z(2)

···

z(n)

4

Unsupervised induction
Setting:
x(2)

···

x(n)

z(1) z(2)
Probabilistic model: p(x, z; θ)

···

z(n)

x(1)

x: observed input
z: hidden output
θ: parameters (multinomial probabilities)

4

Unsupervised induction
Setting:
x(2)

···

x(n)

z(1) z(2)
Probabilistic model: p(x, z; θ)

···

z(n)

x(1)

x: observed input
z: hidden output
θ: parameters (multinomial probabilities)

Training objective: likelihood
n

θ∗ = argmax
θ

log p(x(i); θ)
i=1

4

Unsupervised induction
Setting:
x(2)

···

x(n)

z(1) z(2)
Probabilistic model: p(x, z; θ)

···

z(n)

x(1)

x: observed input
z: hidden output
θ: parameters (multinomial probabilities)

Training objective: likelihood
n

θ∗ = argmax
θ

log p(x(i); θ)
i=1

Evaluation: accuracy
gold z(i)

versus

predicted argmaxz p(z | x(i); θ∗)
4

Batch EM
θ
x(1)

θ
x(2)

···
···

s1

+

x(n−1)

θ

···

θ

x(n)
sn−1

s2

+

θ

sn

+

+

µ

5

Batch EM
θ
x(1)

θ
x(2)

···
···

s1

+

x(n−1)

θ

···

θ

x(n)
(M-step)

sn−1

s2

+

θ

sn

+

+

µ

5

Batch EM
µ
x(1)

µ
x(2)

···
···

s1

+

x(n−1)

µ

···

µ

x(n)
sn−1

s2

+

µ

sn

+

+

µ

5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

0 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

1 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

2 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

3 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

4 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

5 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

6 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

7 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

8 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

9 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

10 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

10 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

11 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

12 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

13 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

14 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

15 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

16 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

17 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

18 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

19 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

20 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

20 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

30 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

parameter space
opt

40 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

parameter space
opt

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

• Spend a lot of time computing
new parameters exactly, but
have rough estimate much
earlier

40 data points processed
5

Batch EM
µ
x(1)

µ
x(2)

···

s1

+

parameter space
opt

40 data points processed

µ
x(n−1)

µ

···

µ

x(n)
sn−1

s2

+
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

···

sn

+

+

µ

• Spend a lot of time computing
new parameters exactly, but
have rough estimate much
earlier
• New parameters are
intermediate, so don’t need to
obsess about the exact value
5

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1

µ

C

C

···

x(3)
s2

s3

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

0 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

1 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

2 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

3 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

4 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

5 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

6 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

7 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

8 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

9 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

s3

parameter space
opt

10 data points processed

6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

parameter space
opt

s3
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

10 data points processed

Online (fast, unstable)

Batch (slow, stable)
6

Online EM [Capp´ & Moulines, 2009]
e
µ
x(1)

µ

C
x(2)

s1
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

µ

C

C

···

x(3)
s2

parameter space
opt

s3
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

10 data points processed

Online (fast, unstable)

Batch (slow, stable)

Next: stabilize online EM by modifying optimization parameters
6

Optimization parameter 1 of 2: stepsize
µ
x(1)

µ

C
x(2)

s1

µ

C

C

···

x(3)
s2

s3

Combine old µ and new si:

7

Optimization parameter 1 of 2: stepsize
µ
x(1)

µ

C
x(2)

s1

µ

C

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

7

Optimization parameter 1 of 2: stepsize
µ
x(1)

µ

C
x(2)

s1

1
2

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1

7

Optimization parameter 1 of 2: stepsize
µ
x(1)

µ

C
x(2)

s1

1
2

large updates, unstable

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

0 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

1 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

2 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

3 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

4 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

5 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

6 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

7 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

8 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

9 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s1

1
2

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

···

x(3)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,
α=

µ

C

s3

ηk =

1
kα

on k-th update
α=1
small updates, stable

parameter space
opt

10 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

0 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

1 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

2 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

3 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

4 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

5 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

6 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

7 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

8 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

9 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)
s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

ηk =

1
2

parameter space
opt

10 data points processed

···

s3

1
kα

on k-th update
α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

C

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

0 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

1 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

2 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

3 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

4 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

5 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

6 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

7 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

8 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

9 data points processed

7

Optimization parameter 1 of 2: stepsize
µ

µ

C

x(1)

x(2)

C

s2

Combine old µ and new si:
C(µ, si) = (1 − ηk )µ + ηk si,

s3

ηk =

1
kα

on k-th update

1
2

α=1

large updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

···

x(3)

s1

α=

µ

C

small updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

7

Optimization parameter 2 of 2: minibatch size
µ
x(1)

µ

C
x(2)

s1

µ

C

C

···

x(3)
s2

s3

8

Optimization parameter 2 of 2: minibatch size
µ
x(1)
···
x(m)

µ

C
x(m+1)
···
x(2m)

s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch

8

Optimization parameter 2 of 2: minibatch size
µ
x(1)
···
x(m)

µ

C
x(m+1)
···
x(2m)

s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable

m=n
infrequent updates, stable

8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

0 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

1 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

2 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

3 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

4 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

5 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

6 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

7 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

8 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

9 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1
frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

m=n
infrequent updates, stable

parameter space
opt

10 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

0 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

4 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

8 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

0 data points processed
8

Optimization parameter 2 of 2: minibatch size
µ

µ

C

x(1)
···
x(m)

x(m+1)
···
x(2m)
s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

m = size of a mini-batch
m=1

m=n

frequent updates, unstable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

infrequent updates, stable
Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed

Data
(0,8)
(6,2)
(3,8)
(2,1)
(3,5)
(2,4)
(4,4)
(5,7)
(3,6)
(4,3)

parameter space
opt

10 data points processed
8

Setting optimization parameters
stepsize reduction power α

mini-batch size m

9

Setting optimization parameters
stepsize reduction power α
Document classiﬁcation:

mini-batch size m

[Likelihood]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
-8.875
-8.604
-8.541
-8.519
-8.505
-8.471

3
-8.710
-8.575
-8.533
-8.506
-8.486
-8.319

10
-8.610
-8.540
-8.531
-8.493
-8.283
-8.204

30
-8.555
-8.524
-8.354
-8.228
-8.106
-8.052

100
-8.505
-8.235
-8.023
-7.933
-7.910
-7.919

300
-8.172
-8.041
-7.943
-7.896
-7.889
-7.889

1K
-7.920
-7.898
-7.886
-7.883
-7.889
-7.892

3K
-7.906
-7.901
-7.896
-7.890
-7.891
-7.896

10K
-7.916
-7.916
-7.918
-7.922
-7.927
-7.937

9

Setting optimization parameters
stepsize reduction power α
Document classiﬁcation:

mini-batch size m

[Likelihood]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
-8.875
-8.604
-8.541
-8.519
-8.505
-8.471

3
-8.710
-8.575
-8.533
-8.506
-8.486
-8.319

10
-8.610
-8.540
-8.531
-8.493
-8.283
-8.204

30
-8.555
-8.524
-8.354
-8.228
-8.106
-8.052

100
-8.505
-8.235
-8.023
-7.933
-7.910
-7.919

300
-8.172
-8.041
-7.943
-7.896
-7.889
-7.889

1K
-7.920
-7.898
-7.886
-7.883
-7.889
-7.892

3K
-7.906
-7.901
-7.896
-7.890
-7.891
-7.896

10K
-7.916
-7.916
-7.918
-7.922
-7.927
-7.937

9

Setting optimization parameters
stepsize reduction power α
Document classiﬁcation:

mini-batch size m

[Likelihood]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
-8.875
-8.604
-8.541
-8.519
-8.505
-8.471

3
-8.710
-8.575
-8.533
-8.506
-8.486
-8.319

10
-8.610
-8.540
-8.531
-8.493
-8.283
-8.204

30
-8.555
-8.524
-8.354
-8.228
-8.106
-8.052

100
-8.505
-8.235
-8.023
-7.933
-7.910
-7.919

300
-8.172
-8.041
-7.943
-7.896
-7.889
-7.889

1K
-7.920
-7.898
-7.886
-7.883
-7.889
-7.892

3K
-7.906
-7.901
-7.896
-7.890
-7.891
-7.896

10K
-7.916
-7.916
-7.918
-7.922
-7.927
-7.937

[Accuracy]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
5.4
5.4
5.5
5.6
5.8
6.2

3
5.4
5.4
5.5
5.6
6.0
11.8

10
5.5
5.6
5.6
6.0
13.4
19.6

30
5.6
5.6
11.1
21.7
32.4
35.2

100
6.0
22.3
39.9
47.3
48.7
47.6

300
25.7
36.1
43.3
45.0
48.4
49.5

1K
48.8
48.7
48.1
47.8
46.4
47.5

3K
49.9
49.3
49.0
49.5
49.4
49.3

10K
44.6
44.2
43.5
42.8
42.4
41.7

9

Setting optimization parameters
stepsize reduction power α
Document classiﬁcation:

mini-batch size m

[Likelihood]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
-8.875
-8.604
-8.541
-8.519
-8.505
-8.471

3
-8.710
-8.575
-8.533
-8.506
-8.486
-8.319

10
-8.610
-8.540
-8.531
-8.493
-8.283
-8.204

30
-8.555
-8.524
-8.354
-8.228
-8.106
-8.052

100
-8.505
-8.235
-8.023
-7.933
-7.910
-7.919

300
-8.172
-8.041
-7.943
-7.896
-7.889
-7.889

1K
-7.920
-7.898
-7.886
-7.883
-7.889
-7.892

3K
-7.906
-7.901
-7.896
-7.890
-7.891
-7.896

10K
-7.916
-7.916
-7.918
-7.922
-7.927
-7.937

[Accuracy]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
5.4
5.4
5.5
5.6
5.8
6.2

3
5.4
5.4
5.5
5.6
6.0
11.8

10
5.5
5.6
5.6
6.0
13.4
19.6

30
5.6
5.6
11.1
21.7
32.4
35.2

100
6.0
22.3
39.9
47.3
48.7
47.6

300
25.7
36.1
43.3
45.0
48.4
49.5

1K
48.8
48.7
48.1
47.8
46.4
47.5

3K
49.9
49.3
49.0
49.5
49.4
49.3

10K
44.6
44.2
43.5
42.8
42.4
41.7

9

Setting optimization parameters
stepsize reduction power α
Document classiﬁcation:

mini-batch size m

[Likelihood]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
-8.875
-8.604
-8.541
-8.519
-8.505
-8.471

3
-8.710
-8.575
-8.533
-8.506
-8.486
-8.319

10
-8.610
-8.540
-8.531
-8.493
-8.283
-8.204

30
-8.555
-8.524
-8.354
-8.228
-8.106
-8.052

100
-8.505
-8.235
-8.023
-7.933
-7.910
-7.919

300
-8.172
-8.041
-7.943
-7.896
-7.889
-7.889

1K
-7.920
-7.898
-7.886
-7.883
-7.889
-7.892

3K
-7.906
-7.901
-7.896
-7.890
-7.891
-7.896

10K
-7.916
-7.916
-7.918
-7.922
-7.927
-7.937

[Accuracy]
α\m
0.5
0.6
0.7
0.8
0.9
1.0

1
5.4
5.4
5.5
5.6
5.8
6.2

3
5.4
5.4
5.5
5.6
6.0
11.8

10
5.5
5.6
5.6
6.0
13.4
19.6

30
5.6
5.6
11.1
21.7
32.4
35.2

100
6.0
22.3
39.9
47.3
48.7
47.6

300
25.7
36.1
43.3
45.0
48.4
49.5

1K
48.8
48.7
48.1
47.8
46.4
47.5

3K
49.9
49.3
49.0
49.5
49.4
49.3

10K
44.6
44.2
43.5
42.8
42.4
41.7

(α, m) important, but can set using likelihood (unsupervised)
9

Results: speed
-6.9

log-likelihood

-5.9

0.8

accuracy

1.0

0.6
0.4
0.2
20

40

60

-7.8
-8.8
Batch
Online

-9.8

80

iterations

20

40

60

80

iterations

(a) POS tagging

Online converges faster than Batch
10

Results: speed
-6.9

0.8

-8.3

0.6
0.4
0.2
20

40

60

-7.8
-8.8
Batch
Online

-9.8

80

20

iterations

40

60

log-likelihood

-7.8

accuracy

1.0

log-likelihood

-5.9

0.8

accuracy

1.0

0.6
0.4
0.2

80

2

iterations

4

6

8

-8.8
-9.3
Batch
Online

-9.8

10

2

4

iterations

(a) POS tagging

6

8

10

iterations

(b) Document classiﬁcation
-5.0

0.8

-4.2

0.8

-6.5

F1

0.6
0.4
0.2
2

4

6

iterations

8

10

-4.4
-4.6
Batch
Online

-4.8
2

4

6

iterations

(c) Word segmentation (English)

8

log-likelihood

1.0

1 − AER

-4.0

log-likelihood

1.0

0.6
0.4
0.2

10

2

4

6

8

-7.9
-9.4
Batch
Online

-10.9

10

iterations

2

4

6

8

10

iterations

(d) Word alignment

Online converges faster than Batch
10

Results: ﬁnal accuracy
Batch
Online

pos
57.3
59.6

doc
39.1
47.8

seg
80.5
80.7

align
78.8
78.9

Online: choose (α, m) with highest likelihood

11

Results: ﬁnal accuracy
Batch
Online
Online∗

pos
57.3
59.6
66.7

doc
39.1
47.8
49.9

seg
80.5
80.7
83.5

align
78.8
78.9
78.9

Online: choose (α, m) with highest likelihood
Online∗: choose (α, m) with highest accuracy

11

Results: ﬁnal accuracy
Batch
Online
Online∗

pos
57.3
59.6
66.7

doc
39.1
47.8
49.9

seg
80.5
80.7
83.5

align
78.8
78.9
78.9

Online: choose (α, m) with highest likelihood
Online∗: choose (α, m) with highest accuracy
Mystery:
• Online EM obtains higher accuracy

11

Results: ﬁnal accuracy
Batch
Online
Online∗

pos
57.3
59.6
66.7

doc
39.1
47.8
49.9

seg
80.5
80.7
83.5

align
78.8
78.9
78.9

Online: choose (α, m) with highest likelihood
Online∗: choose (α, m) with highest accuracy
Mystery:
• Online EM obtains higher accuracy
• Batch EM and online EM optimize same objective function

11

Optimization intuitions
Two parts of optimizing non-convex objectives:
(1) Find a good peak
(2) Climb to the top of that peak

12

Optimization intuitions
Two parts of optimizing non-convex objectives:
(1) Find a good peak
(2) Climb to the top of that peak
Hypothesis:
Accuracy aﬀected by (1), likelihood aﬀected by (1) and (2)

12

Optimization intuitions
Two parts of optimizing non-convex objectives:
(1) Find a good peak
(2) Climb to the top of that peak
Hypothesis:
Accuracy aﬀected by (1), likelihood aﬀected by (1) and (2)
Batch EM does (2) well, online EM does (1) well

12

Optimization intuitions
Two parts of optimizing non-convex objectives:
(1) Find a good peak
(2) Climb to the top of that peak
Hypothesis:
Accuracy aﬀected by (1), likelihood aﬀected by (1) and (2)
Batch EM does (2) well, online EM does (1) well
Batch
Online∗

-7.6

log-likelihood

-5.9

0.8

accuracy

1.0

0.6
0.4
0.2
20

40

60

iterations

80

-9.3
-11.0
-12.7
20

40

60

80

iterations
12

Optimization intuitions
Two parts of optimizing non-convex objectives:
(1) Find a good peak
(2) Climb to the top of that peak
Hypothesis:
Accuracy aﬀected by (1), likelihood aﬀected by (1) and (2)
Batch EM does (2) well, online EM does (1) well
Batch
Online∗
Online∗+Batch

-7.6

log-likelihood

-5.9

0.8

accuracy

1.0

0.6
0.4
0.2
20

40

60

iterations

80

-9.3
-11.0
-12.7
20

40

60

80

iterations

Online∗+Batch: 5 iterations of Online∗ then Batch

12

Summary
Goal: fast unsupervised learning

13

Summary
Goal: fast unsupervised learning
Online EM: update parameters more often
µ
x(1)
···
x(m)

µ

C
x(m+1)
···
x(2m)

s1,m

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

13

Summary
Goal: fast unsupervised learning
Online EM: update parameters more often
µ
x(1)
···
x(m)

µ

C
x(m+1)
···
x(2m)

s1,m

fast,unstable

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

slow,stable

Stepsize and minibatches balance this tradeoﬀ

13

Summary
Goal: fast unsupervised learning
Online EM: update parameters more often
µ
x(1)
···
x(m)

µ

C
x(m+1)
···
x(2m)

s1,m

fast,unstable

µ

C

C

···

x(2m+1)
···
x(3m)
sm+1,2m

s2m+1,3m

slow,stable

Stepsize and minibatches balance this tradeoﬀ
Result: online EM is faster,
and sometimes more accurate than batch EM
13

