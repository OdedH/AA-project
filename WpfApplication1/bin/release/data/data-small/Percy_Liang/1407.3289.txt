arXiv:1407.3289v2 [stat.ML] 31 Oct 2014

Altitude Training:
Strong Bounds for Single-Layer Dropout

Stefan Wager∗ , William Fithian∗ , Sida Wang† , and Percy Liang∗,†
Departments of Statistics∗ and Computer Science†
Stanford University, Stanford, CA-94305, USA
{swager, wfithian}@stanford.edu, {sidaw, pliang}@cs.stanford.edu

Abstract
Dropout training, originally designed for deep neural networks, has been successful on high-dimensional single-layer natural language tasks. This paper proposes
a theoretical explanation for this phenomenon: we show that, under a generative
Poisson topic model with long documents, dropout training improves the exponent
in the generalization bound for empirical risk minimization. Dropout achieves this
gain much like a marathon runner who practices at altitude: once a classiﬁer learns
to perform reasonably well on training examples that have been artiﬁcially corrupted by dropout, it will do very well on the uncorrupted test set. We also show
that, under similar conditions, dropout preserves the Bayes decision boundary and
should therefore induce minimal bias in high dimensions.

1

Introduction

Dropout training [1] is an increasingly popular method for regularizing learning algorithms. Dropout
is most commonly used for regularizing deep neural networks [2, 3, 4, 5], but it has also been found
to improve the performance of logistic regression and other single-layer models for natural language
tasks such as document classiﬁcation and named entity recognition [6, 7, 8]. For single-layer linear
models, learning with dropout is equivalent to using “blankout noise” [9].
The goal of this paper is to gain a better theoretical understanding of why dropout regularization
works well for natural language tasks. We focus on the task of document classiﬁcation using linear
classiﬁers where data comes from a generative Poisson topic model. In this setting, dropout effectively deletes random words from a document during training; this corruption makes the training
examples harder. A classiﬁer that is able to ﬁt the training data will therefore receive an accuracy
boost at test time on the much easier uncorrupted examples. An apt analogy is altitude training,
where athletes practice in more difﬁcult situations than they compete in. Importantly, our analysis
does not rely on dropout merely creating more pseudo-examples for training, but rather on dropout
creating more challenging training examples. Somewhat paradoxically, we show that removing information from training examples can induce a classiﬁer that performs better at test time.
Main Result Consider training the zero-one loss empirical risk minimizer (ERM) using dropout,
where each word is independently removed with probability δ ∈ (0, 1). For a class of Poisson
generative topic models, we show that dropout gives rise to what we call the altitude training phenomenon: dropout improves the excess risk of the ERM by multiplying the exponent in its decay
√
rate by 1/(1 − δ). This improvement comes at the cost of an additive term of O(1/ λ), where λ
ˆ
is the average number of words per document. More formally, let h∗ and h0 be the expected and
S. Wager and W. Fithian are supported by a B.C. and E.J. Eaves Stanford Graduate Fellowship and NSF
VIGRE grant DMS–0502385 respectively.

1

ˆ
empirical risk minimizers, respectively; let h∗ and hδ be the corresponding quantities for dropout
δ
training. Let Err(h) denote the error rate (on test examples) of h. In Section 4, we show that:



ˆ
ˆ
Err hδ − Err (h∗ ) = OP  Err h0 − Err (h∗ )
δ

dropout excess risk

1
1−δ

1 
+ √ ,
λ

(1)

ERM excess risk

where OP is a variant of big-O in probability notation that suppresses logarithmic factors. If λ is
large (we are classifying long documents rather than short snippets of text), dropout considerably
accelerates the decay rate of excess risk. The bound (1) holds for ﬁxed choices of δ. The constants
in the bound worsen as δ approaches 1, and so we cannot get zero excess risk by sending δ to 1.
Our result is modular in that it converts upper bounds on the ERM excess risk to upper bounds on
the dropout excess risk. For example, recall from classic VC theory that the ERM excess risk is
OP ( d/n), where d is the number of features (vocabulary size) and n is the number of training
examples. With dropout δ = 0.5, our result (1) directly implies that the dropout excess risk is
√
OP (d/n + 1/ λ).
The intuition behind the proof of (1) is as follows: when δ = 0.5, we essentially train on half
documents and test on whole documents. By conditional independence properties of the generative
topic model, the classiﬁcation score is roughly Gaussian under a Berry-Esseen bound, and the error
rate is governed by the tails of the Gaussian. Compared to half documents, the coefﬁcient of variation
√
of the classiﬁcation score on whole documents (at test time) is scaled down by 1 − δ compared to
half documents (at training time), resulting in an exponential reduction in error. The additive penalty
√
of 1/ λ stems from the Berry-Esseen approximation.
Note that the bound (1) only controls the dropout excess risk. Even if dropout reduces the excess
risk, it may introduce a bias Err(h∗ )−Err(h∗ ), and thus (1) is useful only when this bias is small. In
δ
Section 5, we will show that the optimal Bayes decision boundary is not affected by dropout under
the Poisson topic model. Bias is thus negligible when the Bayes boundary is close to linear.
It is instructive to compare our generalization bound to that of Ng and Jordan [10], who showed that
the naive Bayes classiﬁer exploits a strong generative assumption—conditional independence of the
features given the label—to achieve an excess risk of OP ( (log d)/n). However, if the generative
assumption is incorrect, then naive Bayes can have a large bias. Dropout enables us to cut excess risk
without incurring as much bias. In fact, naive Bayes is closely related to logistic regression trained
using an extreme form of dropout with δ → 1. Training logistic regression with dropout rates from
the range δ ∈ (0, 1) thus gives a family of classiﬁers between unregularized logistic regression and
naive Bayes, allowing us to tune the bias-variance tradeoff.
Other perspectives on dropout In the general setting, dropout only improves generalization by
a multiplicative factor. McAllester [11] used the PAC-Bayes framework to prove a generalization
bound for dropout that decays as 1 − δ. Moreover, provided that δ is not too close to 1, dropout
behaves similarly to an adaptive L2 regularizer with parameter δ/(1−δ) [6, 12], and at least in linear
regression such L2 regularization improves generalization error by a constant factor. In contrast, by
leveraging the conditional independence assumptions of the topic model, we are able to improve the
exponent in the rate of convergence of the empirical risk minimizer.
It is also possible to analyze dropout as an adaptive regularizer [6, 9, 13]: in comparison with L2
regularization, dropout favors the use of rare features and encourages conﬁdent predictions. If we
believe that good document classiﬁcation should produce conﬁdent predictions by understanding
rare words with Poisson-like occurrence patterns, then the work on dropout as adaptive regularization and our generalization-based analysis are two complementary explanations for the success of
dropout in natural language tasks.

2

Dropout Training for Topic Models

In this section, we introduce binomial dropout, a form of dropout suitable for topic models, and the
Poisson topic model, on which all our analyses will be based.
2

Binomial Dropout Suppose that we have a binary classiﬁcation problem1 with count features
(i)
x(i) ∈ {0, 1, 2, . . .}d and labels y (i) ∈ {0, 1}. For example, xj is the number of times the j-th
(i)
word in our dictionary appears in the i-th document, and y is the label of the document. Our goal
is to train a weight vector w that classiﬁes new examples with features x via a linear decision rule
y = I{w · x > 0}. We start with the usual empirical risk minimizer:
ˆ
n
def

w; x(i) , y (i)

w0 = argminw∈Rd

(2)

i=1

for some loss function (we will analyze the zero-one loss but use logistic loss in experiments, e.g.,
[10, 14, 15]). Binomial dropout trains on perturbed features x(i) instead of the original features x(i) :
˜
n
def

wδ = argminw

(i)

w; x(i) , y (i)
˜

E

(i)

, where xj = Binom xj ; 1 − δ .
˜

(3)

i=1

In other words, during training, we randomly thin the j-th feature xj with binomial noise. If xj
counts the number of times the j-th word appears in the document, then replacing xj with xj is
˜
equivalent to independently deleting each occurrence of word j with probability δ. Because we
are only interested in the decision boundary, we do not scale down the weight vector obtained by
dropout by a factor 1 − δ as is often done [1].
Binomial dropout differs slightly from the usual deﬁnition of (blankout) dropout, which alters the
feature vector x by setting random coordinates to 0 [6, 9, 11, 12]. The reason we chose to study
binomial rather than blankout dropout is that Poisson random variables remain Poisson even after
binomial thinning; this fact lets us streamline our analysis. For rare words that appear once in the
document, the two types of dropout are equivalent.
A Generative Poisson Topic Model Throughout our analysis, we assume that the data is drawn
from a Poisson topic model depicted in Figure 1a and deﬁned as follows. Each document i is assigned a label y (i) according to some Bernoulli distribution. Then, given the label y (i) , the document
gets a topic τ (i) ∈ Θ from a distribution ρy(i) . Given the topic τ (i) , for every word j in the vocabu(i)

(i)

(τ (i) )

(τ )

), where λj ∈ [0, ∞)
lary, we generate its frequency xj according to xj τ (i) ∼ Poisson(λj
is the expected number of times word j appears under topic τ . Note that λ(τ ) 1 is the average
def

length of a document with topic τ . Deﬁne λ = minτ ∈Θ λ(τ ) 1 to be the shortest average document length across topics. If Θ contains only two topics—one for each class—we get the naive
Bayes model. If Θ is the (K − 1)-dimensional simplex where λ(τ ) is a τ -mixture over K basis
vectors, we get the K-topic latent Dirichlet allocation [16].2
Note that although our generalization result relies on a generative model, the actual learning algorithm is agnostic to it. Our analysis shows that dropout can take advantage of a generative structure
while remaining a discriminative procedure. If we believed that a certain topic model held exactly
and we knew the number of topics, we could try to ﬁt the full generative model by EM. This,
however, could make us vulnerable to model misspeciﬁcation. In contrast, dropout beneﬁts from
generative assumptions while remaining more robust to misspeciﬁcation.

3

Altitude Training: Linking the Dropout and Data-Generating Measures

ˆ
Our goal is to understand the behavior of a classiﬁer hδ trained using dropout. During dropout,
the error of any classiﬁer h is characterized by two measures. In the end, we are interested in the
usual generalization error (expected risk) of h where x is drawn from the underlying data-generating
measure:
def
Err (h) = P [y = h(x)] .
(4)
1

Dropout training is known to work well in practice for multi-class problems [8]. For simplicity, however,
we will restrict our theoretical analysis to a two-class setup.
2
In topic modeling, the vertices of the simplex Θ are “topics” and τ is a mixture of topics, whereas we call
τ itself a topic.

3

However, since dropout training works on the corrupted data x (see (3)), in the limit of inﬁnite data,
˜
the dropout estimator will converge to the minimizer of the generalization error with respect to the
dropout measure over x:
˜
def
Errδ (h) = P [y = h(˜)] .
x
(5)
The main difﬁculty in analyzing the generalization of dropout is that classical theory tells us that
the generalization error with respect to the dropout measure will decrease as n → ∞, but we are
interested in the original measure. Thus, we need to bound Err in terms of Errδ . In this section, we
show that the error on the original measure is actually much smaller than the error on the dropout
measure; we call this the altitude training phenomenon.
Under our generative model, the count features xj are conditionally independent given the topic
τ . We thus focus on a single ﬁxed topic τ and establish the following theorem, which provides a
per-topic analogue of (1). Section 4 will then use this theorem to obtain our main result.
Theorem 1. Let h be a binary linear classiﬁer with weights w, and suppose that our features are
drawn from the Poisson generative model given topic τ . Let cτ be the more likely label given τ :
def

cτ = arg max P y (i) = c τ (i) = τ .
c∈{0,1}

(6)

Let ετ be the sub-optimal prediction rate in the dropout measure
˜
def

ετ = P I w · x(i) > 0 = cτ τ (i) = τ ,
˜
˜

(7)

where x(i) is an example thinned by binomial dropout (3), and P is taken over the data-generating
˜
process. Let ετ be the sub-optimal prediction rate in the original measure
def

ετ = P I w · x(i) > 0 = cτ τ (i) = τ .

(8)

Then:
1

ετ = O ετ +
˜1−δ
2
where Ψτ = maxj wj /

d
j=1

Ψτ

,

(9)

(τ )

2
λj wj , and the constants in the bound depend only on δ.

Theorem 1 only provides us with a useful bound √
when the term Ψτ is √
small. Whenever the largest
2
2
wj is not much larger than the average wj , then Ψτ scales as O(1/ λ), where λ is the average
document length. Thus, the bound (9) is most useful for long documents.
A Heuristic Proof of Theorem 1. The proof of Theorem 1 is provided in the technical appendix.
Here, we provide a heuristic argument for intuition. Given a ﬁxed topic τ , suppose that it is optimal
to predict cτ = 1, so our test error is ετ = P w · x ≤ 0 τ . For long enough documents, by
def

2
the central limit theorem, the score s = w · x will be roughly Gaussian s ∼ N µτ , στ , where
(τ )
(τ ) 2
d
d
2
µτ = j=1 λj wj and στ = j=1 λj wj . This implies that ετ ≈ Φ (−µτ /στ ) , where Φ is the
def

cumulative distribution function of the Gaussian. Now, let s = w · x be the score on a dropout
˜
˜
2
sample. Clearly, E [˜] = (1 − δ) µτ and Var [˜] = (1 − δ) στ , because the variance of a Poisson
s
s
random variable scales with its mean. Thus,
√
µτ
ετ ≈ Φ − 1 − δ
˜
στ

≈Φ −

µτ
στ

(1−δ)

≈ ε(1−δ) .
τ

(10)

Figure 1b illustrates the relationship between√ two Gaussians. This explains the ﬁrst term on the
the
right-hand side of (9). The extra error term Ψτ arises from a Berry-Esseen bound that approximates Poisson mixtures by Gaussian random variables.

4

A Generalization Bound for Dropout

By setting up a bridge between the dropout measure and the original data-generating measure, Theorem 1 provides a foundation for our analysis. It remains to translate this result into a statement
about the generalization error of dropout. For this, we need to make a few assumptions.
4

y

τ

density

λ

0.0

0.1

0.2

ρ

0.3

0.4

0.5

Original
Dropout

x

−2

J

−1

0

1

2

3

score

I
(a) Graphical representation of the Poisson topic model:
Given a document with label y, we draw a document
topic τ from the multinomial distribution with probabilities ρy . Then, we draw the words x from the topic’s
Poisson distribution with mean λ(τ ) . Boxes indicate repeated observations, and greyed-out nodes are observed
during training.

(b) For a ﬁxed classiﬁer w, the probabilities of error on an example drawn from the original and
dropout measures are governed by the tails of two
Gaussians (shaded). The dropout Gaussian has a
larger coefﬁcient of variation, which means the error on the original measure (test) is much smaller
than the error on the dropout measure (train) (10).
In this example, µ = 2.5, σ = 1, and δ = 0.5.

Figure 1: (a) Graphical model. (b) The altitude training phenomenon.
Our ﬁrst assumption is fundamental: if the classiﬁcation signal is concentrated among just a few
features, then we cannot expect dropout training to do well. The second and third assumptions,
which are more technical, guarantee that a classiﬁer can only do well overall if it does well on every
topic; this lets us apply Theorem 1. A more general analysis that relaxes Assumptions 2 and 3 may
be an interesting avenue for future work.
Assumption 1: well-balanced weights First, we need to assume that all the signal is not concentrated in a few features. To make this intuition formal, we say a linear classiﬁer with weights w is
well-balanced if the following holds for each topic τ :
d
j=1
(τ ) 2
d
j=1 λj wj

2
maxj wj

(τ )

λj

≤ κ for some 0 < κ < ∞.

(11)

For example, suppose each word was either useful (|wj | = 1) or not (wj = 0); then κ is the inverse
expected fraction of words in a document that are useful. In Theorem 2 we restrict the ERM to
well-balanced classiﬁers and assume that the expected risk minimizer h∗ over all linear rules is also
well-balanced.
Assumption 2: discrete topics Second, we assume that there are a ﬁnite number T of topics, and
that the available topics are not too rare or ambiguous: the minimal probability of observing any
topic τ is bounded below by
P [τ ] ≥ pmin > 0,
(12)
1
and that each topic-conditional probability is bounded away from 2 (random guessing):
P y (i) = c τ (i) = τ −

1
≥α>0
2

(13)

for all topics τ ∈ {1, ..., T }. This assumption substantially simpliﬁes our arguments, allowing us
to apply Theorem 1 to each topic separately without technical overhead.
Assumption 3: distinct topics Finally, as an extension of Assumption 2, we require that the topics
be “well separated.” First, deﬁne Errmin = P[y (i) = cτ (i) ], where cτ is the most likely label given
topic τ (6); this is the error rate of the optimal decision rule that sees topic τ . We assume that the
best linear rule h∗ satisfying (11) is almost as good as always guessing the best label cτ under the
δ
dropout measure:
1
Errδ (h∗ ) = Errmin + O √
,
(14)
δ
λ
5

where, as usual, λ is a lower bound on the average document length. If the dimension d is larger
than the number of topics T , this assumption is fairly weak: the condition (14) holds whenever the
matrix Π of topic centers has full rank, and the minimum singular value of Π is not too small (see
Proposition 6 in the Appendix for details). This assumption is satisﬁed if the different topics can be
separated from each other with a large margin.
Under Assumptions 1–3 we can turn Theorem 1 into a statement about generalization error.
Theorem 2. Suppose that our features x are drawn from the Poisson generative model (Figure 1a),
ˆ
and Assumptions 1–3 hold. Deﬁne the excess risks of the dropout classiﬁer hδ on the dropout and
data-generating measures, respectively:
def
def
ˆ
ˆ
η = Errδ hδ − Errδ (h∗ ) and η = Err hδ − Err (h∗ ) .
˜
δ
δ

(15)

Then, the altitude training phenomenon applies:
1
1
η = O η 1−δ + √
˜
λ

.

(16)

The above bound scales linearly in p−1 and α−1 ; the full dependence on δ is shown in the appendix.
min
In a sense, Theorem 2 is a meta-generalization bound that allows us to transform generalization
bounds with respect to the dropout measure (˜) into ones on the data-generating measure (η) in a
η
modular way. As a simple example, standard VC theory provides an η = OP ( d/n) bound which,
˜
together with Theorem 2, yields:
ˆ
Corollary 3. Under the same conditions as Theorem 2, the dropout classiﬁer hδ achieves the following excess risk:


1
1−δ
d
1 
ˆ
.
(17)
+√
Err hδ − Err (h∗ ) = OP 
δ
n
λ
ˆ
More generally, we can often check that upper bounds for Err(h) − Err(h∗ ) also work as upper
ˆ δ ) − Errδ (h∗ ); this gives us the heuristic result from (1).
bounds for Errδ (h
δ

5

The Bias of Dropout

In the previous section, we showed that under the Poisson topic model in Figure 1a, dropout can
ˆ
achieve a substantial cut in excess risk Err(hδ ) − Err(h∗ ). But to complete our picture of dropout’s
δ
performance, we must address the bias of dropout: Err(h∗ ) − Err(h∗ ).
δ
Dropout can be viewed as importing “hints” from a generative assumption about the data. Each observed (x, y) pair (each labeled document) gives us information not only about the conditional class
probability at x, but also about the conditional class probabilities at numerous other hypothetical
values x representing shorter documents of the same class that did not occur. Intuitively, if these x
˜
˜
are actually good representatives of that class, the bias of dropout should be mild.
For our key result in this section, we will take the Poisson generative model from Figure 1a, but
further assume that document length is independent of the topic. Under this assumption, we will
show that dropout preserves the Bayes decision boundary in the following sense:
Proposition 4. Let (x, y) be distributed according to the Poisson topic model of Figure 1a. Assume
that document length is independent of topic: λ(τ ) 1 = λ for all topics τ . Let x be a binomial
˜
dropout sample of x with some dropout probability δ ∈ (0, 1). Then, for every feature vector v ∈ Rd ,
we have:
P y=1 x=v =P y=1 x=v .
˜

(18)

If we had an inﬁnite amount of data (˜, y) corrupted under dropout, we would predict according to
x
1
I{P y = 1 x = v > 2 }. The signiﬁcance of Proposition 4 is that this decision rule is identical to
˜
the true Bayes decision boundary (without dropout). Therefore, the empirical risk minimizer of a
sufﬁciently rich hypothesis class trained with dropout would incur very small bias.
6

20
0.5

1

2

5

10

0

Test Error Rate (%)

200

q
q q qqqqq
qq q
q
q q
q qqqqqq
q qq
qqqq
qqqqqqqq
q qq
qqqqq q
q qqq q
qqqqqqqqq q
qqqqqqqqqqqq
qqqqqqqqqqq
qqqqqqq
qqqqq q
qq qqq
qq qqqqqqqqq
q qqqqqqqq
qqqqqq
qq
qqqqqqqqqq
qqqqqq q
qqqqq
qqqqq
q
qqqqqqqqqq
qqqqqqqq q
qqqqq
qqqqq
qqqqqqqqqqq q q
q qqqqqqqqq
qqqqqqqqqqq q
q
qqqqqqqqq
qq q
qqqqqqqqqq qq q
qqqqqqqqq
qqqqqqqqqqqqq
qqqqqqqqqq
qqqqqqqqqq
qqqqqqqqq
qqqqq q q
q qqqqqqqq q
q
qqqqqqqq q
q q
qqq qqq q
q
q qqqqqqqqqqqq q
qqqqqqqqqqq q
qqqqqqqqq
q q qqqq
qqqqqqq
q
qqqqqqqqqqqqq
qqqqqqqqqqqq
qqqqqqqqqq q
qqqqqqqq
qqqq
qqq
qqqqqqqqq q
q qqqqqq
qqqqqqqqqqqq
qqqqqqqqqqq q
qqqqqqqq
q qqqqqq
qqqq
q qqqq
qq
q
qqqqqqqq q
qqqqqqqqq
qqqqqqq
qqqqqqq q
qqq qqqq
qq
qqqqqqqqqqq
qqqqqqqqq
qqqqq
qqq
qqqqqqqqq
q qqqqqqq
q qqqq
q qqqq q q
qqq
qqqqqqqqqq
q
qqq
qqqqq q q
qq qq q
qqqqq q
q qqqqqq q
qqqqqqqqq q q q
qqqqqqq
qq qqqqqq q
q qqq q q q
qqq
qq
q
q
q qqqqqq
q qq q q q q q q q
qqq
q qq
q q
qq q
q qq
q qqq qqq qq q
q qq q
q q qqqq q q
q
qqqqq q q
qqqqq
qq
qqqqqqqqqq
qqq
q
qq
qqqqqqqqqqqqq
qqqqqqqqqq
qqqqqq qq
q q
qqqqqqqqqq
q qqqq
qqqqqqqqqqqqqqq q
qqqqqqqqq q
qqqqqqqqq
qqqqqqqqqqqqq q
q qqqqqqqqqqq
qqqqqqqq q
q
qqqqqqqqqqq
q qqqq
qqqqqqqq
qqqqqqqq q
qqqqqqqqqqqqq
qqqqqqq
qqqqq qq
qqq
qqqqqqqqqqqqqqq
qqqqqqqqqqq qq
qqqqqqqq
qqqqqqq
q q qq
q
q
qqqqqqqqqqqqq q
qqqqqqqqqq
q qqqqqqqq
qqqqqqqqqqqq q
qqqqqqqqqq qq
qqqqqqqqqqqqqqq
qqqqqqqqqqq
qqqqq
qqqqqqqqqqqqq
qq
qqqqqqqqq
qqqqqq
q qqqqqqqqq
qqqqqqqqqqqq
q qqqqqqq
qqqqqqqqqqqqq
qqqqqqqqqq
qq qq
qqqq
qqqqqqqqqqqqq q
q qq
qqqqqq
qqqqqqqqqq q
qq
qqqqqqqqqq
q qq
qqqqqqqqqqqq q
qqqqqqqqq q q
q qqqqqqqqqqqqqq
qqqqqqqq q
qqqq qq
q qq
qqqqqqqqqq
qqqqqqqqq
qqqqqq
qq q q
qqqqqqqqq q
qq q
qqqqq q
qq q
q qqqqqqqq q q
qqqqqqqqqqqq
qqqqqq
q q
qqqqqqq
q q
q
q q qq
qqqqqq q
qq q
q q q

100

X2

300

LogReg Boundary
Dropout Boundary
Bayes Boundary

0

o Long Documents
Short (Dropout) Documents

LR
0.25
0.5
0.75
0.9
0.95
0.99
NB

0

100

200

300

400

50

500

100

200

500

1000

2000

n

X1

(a) Dropout (δ = 0.75) with d = 2. For long documents (circles in the upper-right), logistic regression focuses on capturing the small red cluster; the
large red cluster has almost no inﬂuence. Dropout
(dots in the lower-left) distributes inﬂuence more
equally between the two red clusters.

(b) Learning curves for the synthetic experiment.
Each axis is plotted on a log scale. Here the dropout
rate δ ranges from 0 (logistic regression) to 1 (naive
Bayes) for multiple values of training set sizes n.
As n increases, less dropout is preferable, as the
bias-variance tradeoff shifts.

Figure 2: Behavior of binomial dropout in simulations. In the left panel, the circles are the original
data, while the dots are dropout-thinned examples. The Monte Carlo error is negligible.
However, Proposition 4 does not guarantee that dropout incurs no bias when we ﬁt a linear classiﬁer.
In general, the best linear approximation for classifying shorter documents is not necessarily the
best for classifying longer documents. As n → ∞, a linear classiﬁer trained on (x, y) pairs will
eventually outperform one trained on (˜, y) pairs.
x
Dropout for Logistic Regression To gain some more intuition about how dropout affects linear
classiﬁers, we consider logistic regression. A similar phenomenon should also hold for the ERM,
but discussing this solution is more difﬁcult since the ERM solution does not have have a simple
characterization. The relationship between the 0-1 loss and convex surrogates has been studied
n
by, e.g., [14, 15]. The score criterion for logistic regression is 0 = i=1 y (i) − pi x(i) , where
ˆ
(i)
pi = (1 + e−w·x )−1 are the ﬁtted probabilities. Note that easily-classiﬁed examples (where pi is
ˆ
ˆ
(i)
close to y ) play almost no role in driving the ﬁt. Dropout turns easy examples into hard examples,
giving more examples a chance to participate in learning a good classiﬁcation rule.
Figure 2a illustrates dropout’s tendency to spread inﬂuence more democratically for a simple classiﬁcation problem with d = 2. The red class is a 99:1 mixture over two topics, one of which is much
less common, but harder to classify, than the other. There is only one topic for the blue class. For
long documents (open circles in the top right), the infrequent, hard-to-classify red cluster dominates
the ﬁt while the frequent, easy-to-classify red cluster is essentially ignored. For dropout documents
with δ = 0.75 (small dots, lower left), both red clusters are relatively hard to classify, so the infrequent one plays a less disproportionate role in driving the ﬁt. As a result, the ﬁt based on dropout is
more stable but misses the ﬁner structure near the decision boundary. Note that the solid gray curve,
the Bayes boundary, is unaffected by dropout, per Proposition 4. But, because it is nonlinear, we
obtain a different linear approximation under dropout.

6

Experiments and Discussion

Synthetic Experiment Consider the following instance of the Poisson topic model: We choose
1
the document label uniformly at random: P y (i) = 1 = 2 . Given label 0, we choose topic τ (i) = 0
deterministically; given label 1, we choose a real-valued topic τ (i) ∼ Exp(3). The per-topic Poisson
intensities λ(τ ) are deﬁned as follows:

(τ )
(1, . . . , 1 0, . . . , 0 0, . . . , 0) if τ = 0,
eθ j
(τ )
θ(τ ) = (0, . . . , 0 τ, . . . , τ 0, . . . , 0) otherwise, λj = 1000 ·
. (19)
(τ )
θ

500
ej
j =1
7
7
486
The ﬁrst block of 7 independent words are indicative of label 0, the second block of 7 correlated
words are indicative of label 1, and the remaining 486 words are indicative of neither.
7

0.26

0.6
Log.Reg.
Naive Bayes
Dropout−0.8
Dropout−0.5
Dropout−0.2

0.55
0.5

Log.Reg.
Naive Bayes
Dropout−0.8
Dropout−0.5
Dropout−0.2

0.24
0.22
0.2

0.4

Error rate

Error rate

0.45

0.35
0.3

0.18
0.16

0.25

0.14
0.2

0.12

0.15
0.1

0

0.1

0.2

0.3
0.4
0.5
Fraction of data used

0.6

0.7

0.1

0.8

(a) Polarity 2.0 dataset [17].

0

0.2

0.4
0.6
Fraction of data used

0.8

1

(b) IMDB dataset [18].

Figure 3: Experiments on sentiment classiﬁcation. More dropout is better relative to logistic regression for small datasets and gradually worsens with more training data.
We train a model on training sets of various size n, and evaluate the resulting classiﬁers’ error rates
on a large test set. For dropout, we recalibrate the intercept on the training set. Figure 2b shows
the results. There is a clear bias-variance tradeoff, with logistic regression (δ = 0) and naive Bayes
(δ = 1) on the two ends of the spectrum.3 For moderate values of n, dropout improves performance,
with δ = 0.95 (resulting in roughly 50-word documents) appearing nearly optimal for this example.
Sentiment Classiﬁcation We also examined the performance of dropout as a function of training
set size on a document classiﬁcation task. Figure 3a shows results on the Polarity 2.0 task [17],
where the goal is to classify positive versus negative movie reviews on IMDB. We divided the
dataset into a training set of size 1,200 and a test set of size 800, and trained a bag-of-words logistic
regression model with 50,922 features. This example exhibits the same behavior as our simulation.
Using a larger δ results in a classiﬁer that converges faster at ﬁrst, but then plateaus. We also
ran experiments on a larger IMDB dataset [18] with training and test sets of size 25,000 each and
approximately 300,000 features. As Figure 3b shows, the results are similar, although the training
set is not large enough for the learning curves to cross. When using the full training set, all but three
pairwise comparisons in Figure 3 are statistically signiﬁcant (p < 0.05 for McNemar’s test).
Dropout and Generative Modeling Naive Bayes and empirical risk minimization represent two
divergent approaches to the classiﬁcation problem. ERM is guaranteed to ﬁnd the best model as n →
∞ but can have suboptimal generalization error when n is not large relative to d. Conversely, naive
Bayes has very low generalization error, but suffers from asymptotic bias. In this paper, we showed
that dropout behaves as a link between ERM and naive Bayes, and can sometimes achieve a more
favorable bias-variance tradeoff. By training on randomly generated sub-documents rather than on
whole documents, dropout implicitly codiﬁes a generative assumption about the data, namely that
excerpts from a long document should have the same label as the original document (Proposition 4).
Logistic regression with dropout appears to have an intriguing connection to the naive Bayes SVM
(NBSVM) [19], which is a way of using naive Bayes generative assumptions to strengthen an SVM.
In a recent survey of bag-of-words classiﬁers for document classiﬁcation, NBSVM and dropout often
obtain state-of-the-art accuracies, e.g., [7]. This suggests that a good way to learn linear models for
document classiﬁcation is to use discriminative models that borrow strength from an approximate
generative assumption to cut their generalization error. Our analysis presents an interesting contrast
to other work that directly combine generative and discriminative modeling by optimizing a hybrid
likelihood [20, 21, 22, 23, 24, 25]. Our approach is more guarded in that we only let the generative
assumption speak through pseudo-examples.
Conclusion We have presented a theoretical analysis that explains how dropout training can be
very helpful under a Poisson topic model assumption. Speciﬁcally, by making training examples
artiﬁcially difﬁcult, dropout improves the exponent in the generalization bound for ERM. We believe
that this work is just the ﬁrst step in understanding the beneﬁts of training with artiﬁcially corrupted
features, and we hope the tools we have developed can be extended to analyze other training schemes
under weaker data-generating assumptions.
3

When the logistic regression ﬁt is degenerate, we use L2 -regularized logistic regression with weight 10−7 .

8

References
[1] Geoffrey E Hinton, Nitish Srivastava, Alex Krizhevsky, Ilya Sutskever, and Ruslan R Salakhutdinov.
Improving neural networks by preventing co-adaptation of feature detectors. arXiv:1207.0580, 2012.
[2] Jimmy Ba and Brendan Frey. Adaptive dropout for training deep neural networks. In Advances in Neural
Information Processing Systems, 2013.
[3] Ian J Goodfellow, David Warde-Farley, Mehdi Mirza, Aaron Courville, and Yoshua Bengio. Maxout
networks. In Proceedings of the International Conference on Machine Learning, 2013.
[4] Alex Krizhevsky, Ilya Sutskever, and Geoff Hinton. Imagenet classiﬁcation with deep convolutional
neural networks. In Advances in Neural Information Processing Systems, 2012.
[5] Li Wan, Matthew Zeiler, Sixin Zhang, Yann L Cun, and Rob Fergus. Regularization of neural networks
using dropconnect. In Proceedings of the International Conference on Machine Learning, 2013.
[6] Stefan Wager, Sida Wang, and Percy Liang. Dropout training as adaptive regularization. In Advances in
Neural Information Processing Systems, 2013.
[7] Sida I Wang and Christopher D Manning. Fast dropout training. In Proceedings of the International
Conference on Machine Learning, 2013.
[8] Sida I Wang, Mengqiu Wang, Stefan Wager, Percy Liang, and Christopher D Manning. Feature noising
for log-linear structured prediction. In Empirical Methods in Natural Language Processing, 2013.
[9] Laurens van der Maaten, Minmin Chen, Stephen Tyree, and Kilian Q Weinberger. Learning with
marginalized corrupted features. In International Conference on Machine Learning, 2013.
[10] Andrew Ng and Michael Jordan. On discriminative vs. generative classiﬁers: A comparison of logistic
regression and naive Bayes. Advances in Neural Information Processing Systems, 14, 2001.
[11] David McAllester. A PAC-Bayesian tutorial with a dropout bound. arXiv:1307.2118, 2013.
[12] Pierre Baldi and Peter Sadowski. The dropout learning algorithm. Artiﬁcial Intelligence, 210:78–122,
2014.
[13] Amir Globerson and Sam Roweis. Nightmare at test time: robust learning by feature deletion. In Proceedings of the International Conference on Machine Learning, 2006.
[14] Peter L Bartlett, Michael I Jordan, and Jon D McAuliffe. Convexity, classiﬁcation, and risk bounds.
Journal of the American Statistical Association, 101(473):138–156, 2006.
[15] Tong Zhang. Statistical behavior and consistency of classiﬁcation methods based on convex risk minimization. Annals of Statistics, 32(1):56–85, 2004.
[16] David M Blei, Andrew Y Ng, and Michael I Jordan. Latent Dirichlet allocation. Journal of Machine
Learning Research, 3:993–1022, 2003.
[17] Bo Pang and Lillian Lee. A sentimental education: Sentiment analysis using subjectivity summarization
based on minimum cuts. In Proceedings of the Association for Computational Linguistics, 2004.
[18] Andrew L Maas, Raymond E Daly, Peter T Pham, Dan Huang, Andrew Y Ng, and Christopher Potts.
Learning word vectors for sentiment analysis. In Proceedings of the Association for Computational Linguistics, 2011.
[19] Sida Wang and Christopher D Manning. Baselines and bigrams: Simple, good sentiment and topic classiﬁcation. In Proceedings of the Association for Computational Linguistics, 2012.
[20] R. Raina, Y. Shen, A. Ng, and A. McCallum. Classiﬁcation with hybrid generative/discriminative models.
In Advances in Neural Information Processing Systems, 2004.
[21] G. Bouchard and B. Triggs. The trade-off between generative and discriminative classiﬁers. In International Conference on Computational Statistics, 2004.
[22] J. A. Lasserre, C. M. Bishop, and T. P. Minka. Principled hybrids of generative and discriminative models.
In Computer Vision and Pattern Recognition, 2006.
[23] Guillaume Bouchard. Bias-variance tradeoff in hybrid generative-discriminative models. In International
Conference on Machine Learning and Applications. IEEE, 2007.
[24] A. McCallum, C. Pal, G. Druck, and X. Wang. Multi-conditional learning: Generative/discriminative
training for clustering and classiﬁcation. In Association for the Advancement of Artiﬁcial Intelligence,
2006.
[25] Percy Liang and Michael I Jordan. An asymptotic analysis of generative, discriminative, and pseudolikelihood estimators. In Proceedings of the International Conference on Machine Learning, 2008.
[26] Willliam Feller. An introduction to probability theory and its applications, volume 2. John Wiley & Sons,
1971.
[27] Olivier Bousquet, St´ phane Boucheron, and G´ bor Lugosi. Introduction to statistical learning theory. In
e
a
Advanced Lectures on Machine Learning, pages 169–207. Springer, 2004.

9

A

Technical Results

We now give detailed proofs of the theorems in the paper.
A.1

Altitude Training Phenomeon

We begin with a proof of our main generalization bound result, namely Theorem 1. The proof is
built on top of the following Berry-Esseen type result.
Lemma 5. Let Z1 , ..., Zd be independent Poisson random variables with means λj ∈ R+ , and let
d

wj Zj , µ = E [S] , and σ 2 = Var [S]

S=
j=1

for some ﬁxed set of weights {wj }d . Then, writing FS for the distribution function of S and Φ for
j=1
the standard Gaussian distribution,
sup FS (x) − Φ
x∈R

x−µ
σ

2
maxj {wj }

≤ CBE

d
j=1

2
λj wj

,

(20)

where CBE ≤ 4.
d

Proof. Our ﬁrst step is to write S as a sum of bounded i.i.d. random variables. Let N = j=1 Zj .
Conditional on N , the Zj are distributed as a multinomial with parameters πj = λj /λ where λ =
d
j=1 λj . Thus,
N
d

L S N =L

Wk N

,

k=1

where Wk ∈ {w1 , ..., wd } is a single multinomial draw from the available weights with probability
parameters P [Wk = wj ] = πj . This implies that,
N
d

Wk ,

S=
k=1

where N itself is a Poisson random variable with mean λ.
We also know that a Poisson random variable can be written as a limiting mixture of many rare
Bernoulli trials:
λ
B (m) ⇒ N, with B (m) = Binom m,
.
m
The upshot is that
m

S (m) ⇒ S, with S (m) =

Wk Ik ,

(21)

k=1

where the Wk are as before, and the Ik are independent Bernoulli draws with parameter λ/m.
Because S (m) converges to S in distribution, it sufﬁces to show that (20) holds for large enough m.
The moments of S (m) are correct in ﬁnite samples: E S (m) = µ and Var S (m) = σ 2 for all m.
The key ingredient in establishing (20) is the Berry-Esseen inequality [26], which in our case implies
that
x−µ
ρm
sup FS (m) (x) − Φ
≤ 3√ ,
σ
2sm m
x∈R
where
s2 = Var [Wk Ik ] ,
m
ρm = E |Wk Ik − E [Wk Ik ]|

10

3

,

We can show that
2

− E [Wk Ik ] =

ρm ≤ 8 E |Wk Ik |

3

λ
E [Wk ]
m

λ
2
E Wk −
m

2

s2 = E (Wk Ik )
m

3

+ E [|Wk Ik |]

=8

2

, and

λ
3
E |Wk | +
m

λ
E [|Wk |]
m

3

.

Taking m to ∞, this implies that
4E |W |

x−µ
σ

sup FS (x) − Φ
x∈R

≤
E

3

3/2
[W 2 ]
3

1
√ .
λ

/E W 2

Thus, to establish (20), it only remains to bound E |W |

3/2

def

. Notice that Pj =

2
πj wj /E W 2 deﬁnes a probability distribution on {1, . . . , d}, and

E |W |

3

E [W 2 ]

= EP [|W |] ≤ max{|wj |}.
j

Thus,
3

E |W |

3/2

E [W 2 ]

2
maxj {wj }

≤

d
j=1

2
πj wj

.

We are now ready to prove our main result.
Proof of Theorem 1. The classiﬁer h is a linear classiﬁer of the form
d
def

h (x) = I {S > 0} where S =

w j xj ,
j=1

(τ )

where by assumption xj ∼ Poisson λj . Our model was ﬁt by dropout, so during training we
only get to work with x instead of x, where
˜
xj ∼ Binom (xj , 1 − δ) , and so unconditionally
˜
(τ )

xj ∼ Poisson (1 − δ) λj
˜

.

Without loss of generality, suppose that cτ = 1, so that we can write the error rate ετ during dropout
as
d

ετ = P S < 0 τ , where S =

w j xj .
˜

(22)

j=1

In order to prove our result, we need to translate the information about S into information about S.
The key to the proof is to show that the sums S and S have nearly Gaussian distributions. Let
d

d
(τ )

(τ )

λj wj and σ 2 =

µ=
j=1

2
λj wj
j=1

be the mean and variance of S. After dropout,
E S = (1 − δ) µ and Var S = (1 − δ) σ 2 .
11

Writing FS and FS for the distributions of S and S, we see from Lemma 5 that
sup FS (x) − Φ
x∈R

sup FS (x) − Φ
x∈R

x−µ
≤ CBE Ψτ and
σ
x − (1 − δ) µ
CBE
√
≤√
1−δσ
1−δ

Ψτ ,

where Ψτ is as deﬁned in (9). Recall that our objective is to bound ετ = FS (0) in terms of ετ =
˜
FS (0). The above result implies that
µ
+ CBE Ψτ , and
σ
√
CBE
µ
Φ − 1−δ
≤ ετ + √
˜
σ
1−δ
ετ ≤ Φ −

Now, writing t =

√

Ψτ .

1 − δ µ/σ, we can use the Gaussian tail inequalities
τ2

√
τ2
τ
1
< 2π e 2 Φ (−τ ) < for all τ > 0
+1
τ

(23)

to check that for all t ≥ 1,
√
t2
1 − δ − 2(1−δ)
1
t
e
≤√
t
1−δ
2π
√
1
δ
1 − δ t 1−δ
1 1 − t2 1−δ
√
e 2
= √
− δ
2π t
2π 1−δ
√
δ
1
t2
1
t
1 − δ t 1−δ
√
≤ 2 1−δ √
e− 2
δ
2+1
− 1−δ
2π t
2π
1 √
1
δ
2 1−δ 1 − δ 1−δ
≤ √
Φ (−t) 1−δ
t
δ
−
2π 1−δ

Φ −√

1
1−δ

and so noting that in t Φ(−t) is monotone decreasing in our range of interest and that t ≤
√
√
−2 log Φ(−t), we conclude that for all ετ + CBE / 1 − δ Ψτ ≤ Φ(−1),
˜
1 √
2 1−δ 1 − δ
ετ ≤ √
− δ
4π 1−δ

CBE
· ε+ √
˜
1−δ

CBE
− log ε + √
˜
1−δ

δ
1−δ

Ψτ

1
1−δ

Ψτ

+ CBE

Ψτ .

(24)

We can also write the above expression in more condensed form:
P I{w · x(i) } = cτ τ (i) = τ

 1
(1−δ) 1−δ
2

max wj

= O ετ +
· max 1,

 ˜
(τ ) 2
d
j=1 λj wj

(25)

δ

− log (˜τ ) 1−δ  .
ε


The desired conclusion (9) is equivalent to the above expression, except it uses notation that hides
the log factors.
Proof of Theorem 2. We can write the dropout error rate as
ˆ
Errδ hδ = Errmin +∆,

12

where Errmin is the minimal possible error from assumption (14) and ∆ is the the excess error
T

P [τ ] ετ · P y (i) = 1 τ (i) = τ − P y (i) = 0 τ (i) = τ
˜

∆=

.

τ =1

Here, P [τ ] is the probability of observing a document with topic τ and ετ is as in Theorem 1. The
˜
equality follows by noting that, for each topic τ , the excess error rate is given by the rate at which we
make sub-optimal guesses, i.e., ετ , times the excess probability that we make a classiﬁcation error
˜
given that we made a sub-optimal guess, i.e., P y (i) = 1 τ (i) = τ − P y (i) = 0 τ (i) = τ .
Now, thanks to (14), we know that
1
√
,
λ
and so the generalization error η under the dropout measure satisﬁes
˜
Errδ (h∗ ) = Errmin + O
δ

∆=η+O
˜

1
√
λ

.

Using (12), we see that
ετ ≤ ∆ (2 α pmin )
˜
for each τ , and so
1
ετ = O η + √
˜
˜
λ
uniformly in τ . Thus, given the bound (11), we conclude using (25) that
ετ = O

η + λ−
˜

1−δ
2

1
1−δ

δ

max 1,

− log (˜) 1−δ
η

for each topic τ , and so
ˆ
η = Err hδ − Err (h∗ )
δ
=O

η + λ−
˜

1−δ
2

1
1−δ

(26)
max 1,

− log (˜)
η

δ
1−δ

,

which directly implies (16). Note η will in general be larger than the ετ , because guessing the
optimal label cτ is not guaranteed to lead to a correct classiﬁcation decision (unless each topic is
pure, i.e., only represents one class). Here, substracting the optimal error Err (h∗ ) allows us to
δ
compensate for this effect.
Proof of Corollary 3. Here, we prove the more precise bound

d
1
n
ˆ
Err hδ − Err (h∗ ) = OP 
+ (1−δ) max 1, log
δ
n λ
d

1+δ

1
1−δ


.

(27)

To do this, we only need to show that
ˆ
Errδ hδ − Errδ (h∗ ) = OP
δ

d
n
max 1, log
n
d

,

(28)

i.e., that dropout generalizes at the usual rate with respect to the dropout measure. Then, by applying
ˆ
(26) from the proof of Theorem 2, we immediately conclude that hδ converges at the rate given in
(17) under the data-generating measure.
Let Errδ (h) be the average training loss for a classiﬁer h. The empirical loss is unbiased, i.e.,
E Errδ (h) = Errδ (h).
Given this unbiasedness condition, standard methods for establishing rates as in (28) [27] only require that the loss due to any single training example (x(i) , y (i) ) is bounded, and that the training
examples are independent; these conditions are needed for an application of Hoeffding’s inequality.
Both of these conditions hold here.
13

A.2

Distinct Topics Assumption

Proposition 6. Let the generative model from Section 2 hold, and deﬁne
π (τ ) = λ(τ ) / λ(τ )
1

for the topic-wise word probability vectors and
Π = (π (1) , . . . , π (T ) ) ∈ Rd×T
for the induced matrix. Suppose that Π has rank T , and that the minimum singular value of Π (in
absolute value) is bounded below by
|σmin (Π)| ≥

T
(1 − δ)λ

1+

log+

λ
2π

,

(29)

where log+ is the positive part of log. Then (14) holds.
Proof. Our proof has two parts. We begin by showing that, given (29), there is a vector w with
w 2 ≤ 1 such that
1

I w · π (τ ) > 0 = cτ , and w · π (τ ) ≥ −

Φ−1

(1 − δ)λ

1
√
λ

(30)

for all topics τ ; in other words, the topic centers can be separated with a large margin. After that,
we show that (30) implies (14).
We can re-write the condition (30) as
min

w

2

: cτ w · π

(τ )

≥ 1 for all τ

≤

1

−

(1 − δ)λ

Φ

−1

1
√
λ

−1

,

or equivalently that
min

w

2

:SΠ w ≥1 ≤

1

−

(1 − δ)λ

Φ

1
√
λ

−1

−1

where S = diag(cτ ) is a diagonal matrix of class signs. Now, assuming that rank(Π) ≥ T , we can
verify that
min

w

2

−1

z (Π S 2 Π)

: S Π w ≥ 1 = min
≤

1 (Π Π)
−1

≤ |σmin (Π)|

−1

√

1

≤

(1 − δ)λ

z:z≥1

1

T
1+

log+

λ
2π

−1

where the last line followed by hypothesis. Now, by (23)
Φ − 1+

log+

λ
2π

1
1
λ
≤ √ exp − log
2
2π
2π

1
=√ .
λ

Because Φ−1 is monotone increasing, this implies that
1+

λ
log+
2π

−1

≤

and so (30) holds.
14

−Φ−1

1
√
λ

−1

,

,

√
Now, taking (30) as given, it sufﬁces to check that the sub-optimal prediction rate is O 1/ λ
uniformly for each τ . Focusing now on a single topic τ , suppose without loss of generality that
cτ = 1. We thus need to show that
1
P [w · x ≤ 0] = O √
˜
,
λ
where x is a feature vector thinned by dropout. By Lemma 5 together with (11), we know that
˜
E [w · x]
˜

P [w · x ≤ 0] ≤ Φ −
˜

1
√
λ

+O

Var [w · x]
˜

.

By hypothesis,
1
√
λ

E [w · x] ≥ − (1 − δ)λ(τ ) Φ−1
˜

,

and we can check that
d
(τ )

2
wj λj

Var [w · x] = (1 − δ)
˜

≤ (1 − δ)λ(τ )

j=1

because w

2

≤ 1. Thus,
E [w · x]
˜

Φ −

Var [w · x]
˜

1
√
λ

≤ Φ Φ−1

1
=√ ,
λ

and (14) holds.
A.3

Dropout Preserves the Bayes Decision Boundary

Proof of Proposition 4. Another way to view our topic model is as follows. For each topic τ , deﬁne
def
a distribution over words π (τ ) ∈ ∆d−1 : π (τ ) = λ(τ ) / λ(τ ) 1 . The generative model is equivalent
to ﬁrst drawing the length of the document and then drawing the words from a multinomial:
Li ∼ Poisson

λ(τ )

1

, and x(i) τ (i) , Li ∼ Multinom π (τ

(i)

)

, Li .

(31)

Now, write the multinomial probability mass function (31) as
L!
x
π x1 · · · πd d
Pm [x; π, L] =
x1 ! · · · xp ! 1
For each label c, deﬁne Πc to be the distribution over the probability vectors induced by the distribution over topics. Note that we could have an inﬁnite number of topics. By Bayes rule,




d

d

vj  ·

P x = v y = c = P L =
j=1

P y=c x=v =

j=1
d
j=1

P [c] Pm v; π,
c

vj  dΠc (π), and

Pm v; π,

P [c ] Pm v; π,

vj dΠc (π)

d
j=1

.
vj dΠc (π)

The key part is that the distribution of L doesn’t depend on c, so that when we condition on x =
d
v, it cancels. As for the joint distribution of (x, y), note that, given π and L =
˜ ˜
j=1 xj , x is
conditionally Multinom(π, L). So then

P x = v y = c = P L =
˜





vj  ·

d

Pm v; π,

d

j=1

P y=c x=v =
˜

vj  dΠc (π), and
j=1

P [c] Pm v; π,
c



P [c ] Pm v; π,

d
j=1

vj dΠc (π)

d
j=1

.
vj dΠc (π)

˜
In both cases, L and L don’t depend on the topic, and when we condition on x and x, we get the
˜
same distribution over y.

15

